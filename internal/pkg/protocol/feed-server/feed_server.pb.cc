// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pkg/protocol/feed-server/feed_server.proto

#include "pkg/protocol/feed-server/feed_server.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pbfs {
constexpr SidecarSpec::SidecarSpec(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : version_(nullptr)
  , biz_id_(0u){}
struct SidecarSpecDefaultTypeInternal {
  constexpr SidecarSpecDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SidecarSpecDefaultTypeInternal() {}
  union {
    SidecarSpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SidecarSpecDefaultTypeInternal _SidecarSpec_default_instance_;
constexpr HandshakeMessage::HandshakeMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : api_version_(nullptr)
  , spec_(nullptr){}
struct HandshakeMessageDefaultTypeInternal {
  constexpr HandshakeMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HandshakeMessageDefaultTypeInternal() {}
  union {
    HandshakeMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HandshakeMessageDefaultTypeInternal _HandshakeMessage_default_instance_;
constexpr HandshakeResp::HandshakeResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr){}
struct HandshakeRespDefaultTypeInternal {
  constexpr HandshakeRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~HandshakeRespDefaultTypeInternal() {}
  union {
    HandshakeResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT HandshakeRespDefaultTypeInternal _HandshakeResp_default_instance_;
constexpr MessagingMeta::MessagingMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr)
  , type_(0u){}
struct MessagingMetaDefaultTypeInternal {
  constexpr MessagingMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MessagingMetaDefaultTypeInternal() {}
  union {
    MessagingMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessagingMetaDefaultTypeInternal _MessagingMeta_default_instance_;
constexpr MessagingResp::MessagingResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct MessagingRespDefaultTypeInternal {
  constexpr MessagingRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MessagingRespDefaultTypeInternal() {}
  union {
    MessagingResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessagingRespDefaultTypeInternal _MessagingResp_default_instance_;
constexpr SideWatchMeta::SideWatchMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr){}
struct SideWatchMetaDefaultTypeInternal {
  constexpr SideWatchMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SideWatchMetaDefaultTypeInternal() {}
  union {
    SideWatchMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SideWatchMetaDefaultTypeInternal _SideWatchMeta_default_instance_;
constexpr FeedWatchMessage::FeedWatchMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , payload_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr)
  , type_(0u){}
struct FeedWatchMessageDefaultTypeInternal {
  constexpr FeedWatchMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FeedWatchMessageDefaultTypeInternal() {}
  union {
    FeedWatchMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FeedWatchMessageDefaultTypeInternal _FeedWatchMessage_default_instance_;
constexpr AppMeta_LabelsEntry_DoNotUse::AppMeta_LabelsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct AppMeta_LabelsEntry_DoNotUseDefaultTypeInternal {
  constexpr AppMeta_LabelsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppMeta_LabelsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    AppMeta_LabelsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppMeta_LabelsEntry_DoNotUseDefaultTypeInternal _AppMeta_LabelsEntry_DoNotUse_default_instance_;
constexpr AppMeta::AppMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : labels_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , app_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , uid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct AppMetaDefaultTypeInternal {
  constexpr AppMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppMetaDefaultTypeInternal() {}
  union {
    AppMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppMetaDefaultTypeInternal _AppMeta_default_instance_;
constexpr Repository::Repository(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : root_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RepositoryDefaultTypeInternal {
  constexpr RepositoryDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RepositoryDefaultTypeInternal() {}
  union {
    Repository _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RepositoryDefaultTypeInternal _Repository_default_instance_;
constexpr RepositorySpec::RepositorySpec(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : path_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RepositorySpecDefaultTypeInternal {
  constexpr RepositorySpecDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RepositorySpecDefaultTypeInternal() {}
  union {
    RepositorySpec _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RepositorySpecDefaultTypeInternal _RepositorySpec_default_instance_;
constexpr FileMeta::FileMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : commit_spec_(nullptr)
  , config_item_spec_(nullptr)
  , config_item_attachment_(nullptr)
  , repository_spec_(nullptr)
  , id_(0u)
  , commit_id_(0u){}
struct FileMetaDefaultTypeInternal {
  constexpr FileMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FileMetaDefaultTypeInternal() {}
  union {
    FileMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FileMetaDefaultTypeInternal _FileMeta_default_instance_;
constexpr PullAppFileMetaReq::PullAppFileMetaReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr)
  , app_meta_(nullptr)
  , biz_id_(0u){}
struct PullAppFileMetaReqDefaultTypeInternal {
  constexpr PullAppFileMetaReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullAppFileMetaReqDefaultTypeInternal() {}
  union {
    PullAppFileMetaReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullAppFileMetaReqDefaultTypeInternal _PullAppFileMetaReq_default_instance_;
constexpr PullAppFileMetaResp::PullAppFileMetaResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : file_metas_()
  , repository_(nullptr)
  , pre_hook_(nullptr)
  , post_hook_(nullptr)
  , release_id_(0u){}
struct PullAppFileMetaRespDefaultTypeInternal {
  constexpr PullAppFileMetaRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullAppFileMetaRespDefaultTypeInternal() {}
  union {
    PullAppFileMetaResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullAppFileMetaRespDefaultTypeInternal _PullAppFileMetaResp_default_instance_;
constexpr GetDownloadURLReq::GetDownloadURLReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : token_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , api_version_(nullptr)
  , file_meta_(nullptr)
  , biz_id_(0u){}
struct GetDownloadURLReqDefaultTypeInternal {
  constexpr GetDownloadURLReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDownloadURLReqDefaultTypeInternal() {}
  union {
    GetDownloadURLReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDownloadURLReqDefaultTypeInternal _GetDownloadURLReq_default_instance_;
constexpr GetDownloadURLResp::GetDownloadURLResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetDownloadURLRespDefaultTypeInternal {
  constexpr GetDownloadURLRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetDownloadURLRespDefaultTypeInternal() {}
  union {
    GetDownloadURLResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetDownloadURLRespDefaultTypeInternal _GetDownloadURLResp_default_instance_;
constexpr App::App(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , config_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , revision_(nullptr)
  , id_(0u){}
struct AppDefaultTypeInternal {
  constexpr AppDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AppDefaultTypeInternal() {}
  union {
    App _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AppDefaultTypeInternal _App_default_instance_;
constexpr ListAppsReq::ListAppsReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : match_()
  , biz_id_(0u){}
struct ListAppsReqDefaultTypeInternal {
  constexpr ListAppsReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListAppsReqDefaultTypeInternal() {}
  union {
    ListAppsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListAppsReqDefaultTypeInternal _ListAppsReq_default_instance_;
constexpr ListAppsResp::ListAppsResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apps_(){}
struct ListAppsRespDefaultTypeInternal {
  constexpr ListAppsRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListAppsRespDefaultTypeInternal() {}
  union {
    ListAppsResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListAppsRespDefaultTypeInternal _ListAppsResp_default_instance_;
constexpr PullKvMetaReq::PullKvMetaReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : match_()
  , app_meta_(nullptr)
  , biz_id_(0u){}
struct PullKvMetaReqDefaultTypeInternal {
  constexpr PullKvMetaReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullKvMetaReqDefaultTypeInternal() {}
  union {
    PullKvMetaReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullKvMetaReqDefaultTypeInternal _PullKvMetaReq_default_instance_;
constexpr PullKvMetaResp::PullKvMetaResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : kv_metas_()
  , release_id_(0u){}
struct PullKvMetaRespDefaultTypeInternal {
  constexpr PullKvMetaRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PullKvMetaRespDefaultTypeInternal() {}
  union {
    PullKvMetaResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PullKvMetaRespDefaultTypeInternal _PullKvMetaResp_default_instance_;
constexpr KvMeta::KvMeta(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , kv_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , revision_(nullptr)
  , kv_attachment_(nullptr){}
struct KvMetaDefaultTypeInternal {
  constexpr KvMetaDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~KvMetaDefaultTypeInternal() {}
  union {
    KvMeta _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT KvMetaDefaultTypeInternal _KvMeta_default_instance_;
constexpr GetKvValueReq::GetKvValueReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : key_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , app_meta_(nullptr)
  , biz_id_(0u){}
struct GetKvValueReqDefaultTypeInternal {
  constexpr GetKvValueReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetKvValueReqDefaultTypeInternal() {}
  union {
    GetKvValueReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetKvValueReqDefaultTypeInternal _GetKvValueReq_default_instance_;
constexpr GetKvValueResp::GetKvValueResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : kv_type_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct GetKvValueRespDefaultTypeInternal {
  constexpr GetKvValueRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GetKvValueRespDefaultTypeInternal() {}
  union {
    GetKvValueResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GetKvValueRespDefaultTypeInternal _GetKvValueResp_default_instance_;
}  // namespace pbfs
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[24];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto = nullptr;

const uint32_t TableStruct_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::SidecarSpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::SidecarSpec, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::SidecarSpec, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeMessage, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeMessage, spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeResp, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::HandshakeResp, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingMeta, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingMeta, rid_),
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingMeta, type_),
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingMeta, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::MessagingResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::SideWatchMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::SideWatchMeta, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::SideWatchMeta, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::FeedWatchMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::FeedWatchMessage, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FeedWatchMessage, rid_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FeedWatchMessage, type_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FeedWatchMessage, payload_),
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta_LabelsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta_LabelsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta, app_),
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta, uid_),
  PROTOBUF_FIELD_OFFSET(::pbfs::AppMeta, labels_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::Repository, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::Repository, root_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::RepositorySpec, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::RepositorySpec, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, commit_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, commit_spec_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, config_item_spec_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, config_item_attachment_),
  PROTOBUF_FIELD_OFFSET(::pbfs::FileMeta, repository_spec_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, app_meta_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, token_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaReq, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, release_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, repository_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, file_metas_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, pre_hook_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullAppFileMetaResp, post_hook_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLReq, api_version_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLReq, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLReq, file_meta_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLReq, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetDownloadURLResp, url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::App, id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::App, name_),
  PROTOBUF_FIELD_OFFSET(::pbfs::App, config_type_),
  PROTOBUF_FIELD_OFFSET(::pbfs::App, revision_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::ListAppsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::ListAppsReq, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::ListAppsReq, match_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::ListAppsResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::ListAppsResp, apps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaReq, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaReq, app_meta_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaReq, match_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaResp, release_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::PullKvMetaResp, kv_metas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::KvMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::KvMeta, key_),
  PROTOBUF_FIELD_OFFSET(::pbfs::KvMeta, kv_type_),
  PROTOBUF_FIELD_OFFSET(::pbfs::KvMeta, revision_),
  PROTOBUF_FIELD_OFFSET(::pbfs::KvMeta, kv_attachment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueReq, biz_id_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueReq, app_meta_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueReq, key_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueResp, kv_type_),
  PROTOBUF_FIELD_OFFSET(::pbfs::GetKvValueResp, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pbfs::SidecarSpec)},
  { 8, -1, -1, sizeof(::pbfs::HandshakeMessage)},
  { 16, -1, -1, sizeof(::pbfs::HandshakeResp)},
  { 24, -1, -1, sizeof(::pbfs::MessagingMeta)},
  { 34, -1, -1, sizeof(::pbfs::MessagingResp)},
  { 40, -1, -1, sizeof(::pbfs::SideWatchMeta)},
  { 48, -1, -1, sizeof(::pbfs::FeedWatchMessage)},
  { 58, 66, -1, sizeof(::pbfs::AppMeta_LabelsEntry_DoNotUse)},
  { 68, -1, -1, sizeof(::pbfs::AppMeta)},
  { 77, -1, -1, sizeof(::pbfs::Repository)},
  { 84, -1, -1, sizeof(::pbfs::RepositorySpec)},
  { 91, -1, -1, sizeof(::pbfs::FileMeta)},
  { 103, -1, -1, sizeof(::pbfs::PullAppFileMetaReq)},
  { 114, -1, -1, sizeof(::pbfs::PullAppFileMetaResp)},
  { 125, -1, -1, sizeof(::pbfs::GetDownloadURLReq)},
  { 135, -1, -1, sizeof(::pbfs::GetDownloadURLResp)},
  { 142, -1, -1, sizeof(::pbfs::App)},
  { 152, -1, -1, sizeof(::pbfs::ListAppsReq)},
  { 160, -1, -1, sizeof(::pbfs::ListAppsResp)},
  { 167, -1, -1, sizeof(::pbfs::PullKvMetaReq)},
  { 176, -1, -1, sizeof(::pbfs::PullKvMetaResp)},
  { 184, -1, -1, sizeof(::pbfs::KvMeta)},
  { 194, -1, -1, sizeof(::pbfs::GetKvValueReq)},
  { 203, -1, -1, sizeof(::pbfs::GetKvValueResp)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_SidecarSpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_HandshakeMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_HandshakeResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_MessagingMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_MessagingResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_SideWatchMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_FeedWatchMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_AppMeta_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_AppMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_Repository_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_RepositorySpec_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_FileMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_PullAppFileMetaReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_PullAppFileMetaResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_GetDownloadURLReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_GetDownloadURLResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_App_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_ListAppsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_ListAppsResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_PullKvMetaReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_PullKvMetaResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_KvMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_GetKvValueReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbfs::_GetKvValueResp_default_instance_),
};

const char descriptor_table_protodef_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n*pkg/protocol/feed-server/feed_server.p"
  "roto\022\004pbfs\032!pkg/protocol/core/base/base."
  "proto\032%pkg/protocol/core/commit/commit.p"
  "roto\032/pkg/protocol/core/config-item/conf"
  "ig_item.proto\032!pkg/protocol/core/hook/ho"
  "ok.proto\032\036pkg/protocol/core/kv/kvs.proto"
  "\"B\n\013SidecarSpec\022\016\n\006biz_id\030\001 \001(\r\022#\n\007versi"
  "on\030\002 \001(\0132\022.pbbase.Versioning\"\\\n\020Handshak"
  "eMessage\022\'\n\013api_version\030\001 \001(\0132\022.pbbase.V"
  "ersioning\022\037\n\004spec\030\002 \001(\0132\021.pbfs.SidecarSp"
  "ec\"I\n\rHandshakeResp\022\'\n\013api_version\030\001 \001(\013"
  "2\022.pbbase.Versioning\022\017\n\007payload\030\002 \001(\014\"d\n"
  "\rMessagingMeta\022\'\n\013api_version\030\001 \001(\0132\022.pb"
  "base.Versioning\022\013\n\003rid\030\002 \001(\t\022\014\n\004type\030\003 \001"
  "(\r\022\017\n\007payload\030\004 \001(\014\"\017\n\rMessagingResp\"I\n\r"
  "SideWatchMeta\022\'\n\013api_version\030\001 \001(\0132\022.pbb"
  "ase.Versioning\022\017\n\007payload\030\002 \001(\014\"g\n\020FeedW"
  "atchMessage\022\'\n\013api_version\030\001 \001(\0132\022.pbbas"
  "e.Versioning\022\013\n\003rid\030\002 \001(\t\022\014\n\004type\030\003 \001(\r\022"
  "\017\n\007payload\030\004 \001(\014\"}\n\007AppMeta\022\013\n\003app\030\001 \001(\t"
  "\022\013\n\003uid\030\002 \001(\t\022)\n\006labels\030\003 \003(\0132\031.pbfs.App"
  "Meta.LabelsEntry\032-\n\013LabelsEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\032\n\nRepository\022\014\n"
  "\004root\030\001 \001(\t\"\036\n\016RepositorySpec\022\014\n\004path\030\001 "
  "\001(\t\"\357\001\n\010FileMeta\022\n\n\002id\030\001 \001(\r\022\021\n\tcommit_i"
  "d\030\002 \001(\r\022)\n\013commit_spec\030\003 \001(\0132\024.pbcommit."
  "CommitSpec\022.\n\020config_item_spec\030\004 \001(\0132\024.p"
  "bci.ConfigItemSpec\022:\n\026config_item_attach"
  "ment\030\005 \001(\0132\032.pbci.ConfigItemAttachment\022-"
  "\n\017repository_spec\030\006 \001(\0132\024.pbfs.Repositor"
  "ySpec\"\212\001\n\022PullAppFileMetaReq\022\'\n\013api_vers"
  "ion\030\001 \001(\0132\022.pbbase.Versioning\022\016\n\006biz_id\030"
  "\002 \001(\r\022\037\n\010app_meta\030\003 \001(\0132\r.pbfs.AppMeta\022\r"
  "\n\005token\030\004 \001(\t\022\013\n\003key\030\005 \001(\t\"\274\001\n\023PullAppFi"
  "leMetaResp\022\022\n\nrelease_id\030\001 \001(\r\022$\n\nreposi"
  "tory\030\002 \001(\0132\020.pbfs.Repository\022\"\n\nfile_met"
  "as\030\003 \003(\0132\016.pbfs.FileMeta\022\"\n\010pre_hook\030\004 \001"
  "(\0132\020.pbhook.HookSpec\022#\n\tpost_hook\030\005 \001(\0132"
  "\020.pbhook.HookSpec\"~\n\021GetDownloadURLReq\022\'"
  "\n\013api_version\030\001 \001(\0132\022.pbbase.Versioning\022"
  "\016\n\006biz_id\030\002 \001(\r\022!\n\tfile_meta\030\003 \001(\0132\016.pbf"
  "s.FileMeta\022\r\n\005token\030\004 \001(\t\"!\n\022GetDownload"
  "URLResp\022\013\n\003url\030\001 \001(\t\"X\n\003App\022\n\n\002id\030\001 \001(\r\022"
  "\014\n\004name\030\002 \001(\t\022\023\n\013config_type\030\003 \001(\t\022\"\n\010re"
  "vision\030\004 \001(\0132\020.pbbase.Revision\",\n\013ListAp"
  "psReq\022\016\n\006biz_id\030\001 \001(\r\022\r\n\005match\030\002 \003(\t\"\'\n\014"
  "ListAppsResp\022\027\n\004apps\030\001 \003(\0132\t.pbfs.App\"O\n"
  "\rPullKvMetaReq\022\016\n\006biz_id\030\001 \001(\r\022\037\n\010app_me"
  "ta\030\002 \001(\0132\r.pbfs.AppMeta\022\r\n\005match\030\003 \003(\t\"D"
  "\n\016PullKvMetaResp\022\022\n\nrelease_id\030\001 \001(\r\022\036\n\010"
  "kv_metas\030\003 \003(\0132\014.pbfs.KvMeta\"u\n\006KvMeta\022\013"
  "\n\003key\030\001 \001(\t\022\017\n\007kv_type\030\002 \001(\t\022\"\n\010revision"
  "\030\003 \001(\0132\020.pbbase.Revision\022)\n\rkv_attachmen"
  "t\030\004 \001(\0132\022.pbkv.KvAttachment\"M\n\rGetKvValu"
  "eReq\022\016\n\006biz_id\030\001 \001(\r\022\037\n\010app_meta\030\002 \001(\0132\r"
  ".pbfs.AppMeta\022\013\n\003key\030\003 \001(\t\"0\n\016GetKvValue"
  "Resp\022\017\n\007kv_type\030\001 \001(\t\022\r\n\005value\030\002 \001(\t2\365\003\n"
  "\010Upstream\022:\n\tHandshake\022\026.pbfs.HandshakeM"
  "essage\032\023.pbfs.HandshakeResp\"\000\0227\n\tMessagi"
  "ng\022\023.pbfs.MessagingMeta\032\023.pbfs.Messaging"
  "Resp\"\000\0228\n\005Watch\022\023.pbfs.SideWatchMeta\032\026.p"
  "bfs.FeedWatchMessage\"\0000\001\022H\n\017PullAppFileM"
  "eta\022\030.pbfs.PullAppFileMetaReq\032\031.pbfs.Pul"
  "lAppFileMetaResp\"\000\022E\n\016GetDownloadURL\022\027.p"
  "bfs.GetDownloadURLReq\032\030.pbfs.GetDownload"
  "URLResp\"\000\0229\n\nPullKvMeta\022\023.pbfs.PullKvMet"
  "aReq\032\024.pbfs.PullKvMetaResp\"\000\0229\n\nGetKvVal"
  "ue\022\023.pbfs.GetKvValueReq\032\024.pbfs.GetKvValu"
  "eResp\"\000\0223\n\010ListApps\022\021.pbfs.ListAppsReq\032\022"
  ".pbfs.ListAppsResp\"\000BWZUgithub.com/Tence"
  "ntBlueKing/bk-bcs/bcs-services/bcs-bscp/"
  "pkg/protocol/feed-server;pbfsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_deps[5] = {
  &::descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto,
  &::descriptor_table_pkg_2fprotocol_2fcore_2fcommit_2fcommit_2eproto,
  &::descriptor_table_pkg_2fprotocol_2fcore_2fconfig_2ditem_2fconfig_5fitem_2eproto,
  &::descriptor_table_pkg_2fprotocol_2fcore_2fhook_2fhook_2eproto,
  &::descriptor_table_pkg_2fprotocol_2fcore_2fkv_2fkvs_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto = {
  false, false, 2877, descriptor_table_protodef_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto, "pkg/protocol/feed-server/feed_server.proto", 
  &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once, descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_deps, 5, 24,
  schemas, file_default_instances, TableStruct_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto::offsets,
  file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto, file_level_enum_descriptors_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto, file_level_service_descriptors_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter() {
  return &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto(&descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto);
namespace pbfs {

// ===================================================================

class SidecarSpec::_Internal {
 public:
  static const ::pbbase::Versioning& version(const SidecarSpec* msg);
};

const ::pbbase::Versioning&
SidecarSpec::_Internal::version(const SidecarSpec* msg) {
  return *msg->version_;
}
void SidecarSpec::clear_version() {
  if (GetArenaForAllocation() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
}
SidecarSpec::SidecarSpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.SidecarSpec)
}
SidecarSpec::SidecarSpec(const SidecarSpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_version()) {
    version_ = new ::pbbase::Versioning(*from.version_);
  } else {
    version_ = nullptr;
  }
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.SidecarSpec)
}

inline void SidecarSpec::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biz_id_) -
    reinterpret_cast<char*>(&version_)) + sizeof(biz_id_));
}

SidecarSpec::~SidecarSpec() {
  // @@protoc_insertion_point(destructor:pbfs.SidecarSpec)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SidecarSpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete version_;
}

void SidecarSpec::ArenaDtor(void* object) {
  SidecarSpec* _this = reinterpret_cast< SidecarSpec* >(object);
  (void)_this;
}
void SidecarSpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SidecarSpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SidecarSpec::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.SidecarSpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && version_ != nullptr) {
    delete version_;
  }
  version_ = nullptr;
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SidecarSpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 biz_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbbase.Versioning version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SidecarSpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.SidecarSpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_biz_id(), target);
  }

  // .pbbase.Versioning version = 2;
  if (this->_internal_has_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::version(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.SidecarSpec)
  return target;
}

size_t SidecarSpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.SidecarSpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbbase.Versioning version = 2;
  if (this->_internal_has_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SidecarSpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SidecarSpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SidecarSpec::GetClassData() const { return &_class_data_; }

void SidecarSpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SidecarSpec *>(to)->MergeFrom(
      static_cast<const SidecarSpec &>(from));
}


void SidecarSpec::MergeFrom(const SidecarSpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.SidecarSpec)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_version()) {
    _internal_mutable_version()->::pbbase::Versioning::MergeFrom(from._internal_version());
  }
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SidecarSpec::CopyFrom(const SidecarSpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.SidecarSpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SidecarSpec::IsInitialized() const {
  return true;
}

void SidecarSpec::InternalSwap(SidecarSpec* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SidecarSpec, biz_id_)
      + sizeof(SidecarSpec::biz_id_)
      - PROTOBUF_FIELD_OFFSET(SidecarSpec, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SidecarSpec::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[0]);
}

// ===================================================================

class HandshakeMessage::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const HandshakeMessage* msg);
  static const ::pbfs::SidecarSpec& spec(const HandshakeMessage* msg);
};

const ::pbbase::Versioning&
HandshakeMessage::_Internal::api_version(const HandshakeMessage* msg) {
  return *msg->api_version_;
}
const ::pbfs::SidecarSpec&
HandshakeMessage::_Internal::spec(const HandshakeMessage* msg) {
  return *msg->spec_;
}
void HandshakeMessage::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
HandshakeMessage::HandshakeMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.HandshakeMessage)
}
HandshakeMessage::HandshakeMessage(const HandshakeMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  if (from._internal_has_spec()) {
    spec_ = new ::pbfs::SidecarSpec(*from.spec_);
  } else {
    spec_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.HandshakeMessage)
}

inline void HandshakeMessage::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&api_version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&spec_) -
    reinterpret_cast<char*>(&api_version_)) + sizeof(spec_));
}

HandshakeMessage::~HandshakeMessage() {
  // @@protoc_insertion_point(destructor:pbfs.HandshakeMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void HandshakeMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete api_version_;
  if (this != internal_default_instance()) delete spec_;
}

void HandshakeMessage::ArenaDtor(void* object) {
  HandshakeMessage* _this = reinterpret_cast< HandshakeMessage* >(object);
  (void)_this;
}
void HandshakeMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandshakeMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HandshakeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.HandshakeMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  if (GetArenaForAllocation() == nullptr && spec_ != nullptr) {
    delete spec_;
  }
  spec_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandshakeMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.SidecarSpec spec = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandshakeMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.HandshakeMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // .pbfs.SidecarSpec spec = 2;
  if (this->_internal_has_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.HandshakeMessage)
  return target;
}

size_t HandshakeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.HandshakeMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  // .pbfs.SidecarSpec spec = 2;
  if (this->_internal_has_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *spec_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandshakeMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HandshakeMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandshakeMessage::GetClassData() const { return &_class_data_; }

void HandshakeMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HandshakeMessage *>(to)->MergeFrom(
      static_cast<const HandshakeMessage &>(from));
}


void HandshakeMessage::MergeFrom(const HandshakeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.HandshakeMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  if (from._internal_has_spec()) {
    _internal_mutable_spec()->::pbfs::SidecarSpec::MergeFrom(from._internal_spec());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeMessage::CopyFrom(const HandshakeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.HandshakeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeMessage::IsInitialized() const {
  return true;
}

void HandshakeMessage::InternalSwap(HandshakeMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HandshakeMessage, spec_)
      + sizeof(HandshakeMessage::spec_)
      - PROTOBUF_FIELD_OFFSET(HandshakeMessage, api_version_)>(
          reinterpret_cast<char*>(&api_version_),
          reinterpret_cast<char*>(&other->api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HandshakeMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[1]);
}

// ===================================================================

class HandshakeResp::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const HandshakeResp* msg);
};

const ::pbbase::Versioning&
HandshakeResp::_Internal::api_version(const HandshakeResp* msg) {
  return *msg->api_version_;
}
void HandshakeResp::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
HandshakeResp::HandshakeResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.HandshakeResp)
}
HandshakeResp::HandshakeResp(const HandshakeResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.HandshakeResp)
}

inline void HandshakeResp::SharedCtor() {
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
api_version_ = nullptr;
}

HandshakeResp::~HandshakeResp() {
  // @@protoc_insertion_point(destructor:pbfs.HandshakeResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void HandshakeResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
}

void HandshakeResp::ArenaDtor(void* object) {
  HandshakeResp* _this = reinterpret_cast< HandshakeResp* >(object);
  (void)_this;
}
void HandshakeResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HandshakeResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void HandshakeResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.HandshakeResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HandshakeResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HandshakeResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.HandshakeResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.HandshakeResp)
  return target;
}

size_t HandshakeResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.HandshakeResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HandshakeResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    HandshakeResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HandshakeResp::GetClassData() const { return &_class_data_; }

void HandshakeResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<HandshakeResp *>(to)->MergeFrom(
      static_cast<const HandshakeResp &>(from));
}


void HandshakeResp::MergeFrom(const HandshakeResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.HandshakeResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HandshakeResp::CopyFrom(const HandshakeResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.HandshakeResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HandshakeResp::IsInitialized() const {
  return true;
}

void HandshakeResp::InternalSwap(HandshakeResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
  swap(api_version_, other->api_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HandshakeResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[2]);
}

// ===================================================================

class MessagingMeta::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const MessagingMeta* msg);
};

const ::pbbase::Versioning&
MessagingMeta::_Internal::api_version(const MessagingMeta* msg) {
  return *msg->api_version_;
}
void MessagingMeta::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
MessagingMeta::MessagingMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.MessagingMeta)
}
MessagingMeta::MessagingMeta(const MessagingMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:pbfs.MessagingMeta)
}

inline void MessagingMeta::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&api_version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&api_version_)) + sizeof(type_));
}

MessagingMeta::~MessagingMeta() {
  // @@protoc_insertion_point(destructor:pbfs.MessagingMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MessagingMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
}

void MessagingMeta::ArenaDtor(void* object) {
  MessagingMeta* _this = reinterpret_cast< MessagingMeta* >(object);
  (void)_this;
}
void MessagingMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessagingMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MessagingMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.MessagingMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  payload_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  type_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessagingMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.MessagingMeta.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes payload = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MessagingMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.MessagingMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // string rid = 2;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.MessagingMeta.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // uint32 type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_type(), target);
  }

  // bytes payload = 4;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.MessagingMeta)
  return target;
}

size_t MessagingMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.MessagingMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 2;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // bytes payload = 4;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  // uint32 type = 3;
  if (this->_internal_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessagingMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MessagingMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessagingMeta::GetClassData() const { return &_class_data_; }

void MessagingMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MessagingMeta *>(to)->MergeFrom(
      static_cast<const MessagingMeta &>(from));
}


void MessagingMeta::MergeFrom(const MessagingMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.MessagingMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MessagingMeta::CopyFrom(const MessagingMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.MessagingMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessagingMeta::IsInitialized() const {
  return true;
}

void MessagingMeta::InternalSwap(MessagingMeta* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessagingMeta, type_)
      + sizeof(MessagingMeta::type_)
      - PROTOBUF_FIELD_OFFSET(MessagingMeta, api_version_)>(
          reinterpret_cast<char*>(&api_version_),
          reinterpret_cast<char*>(&other->api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessagingMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[3]);
}

// ===================================================================

class MessagingResp::_Internal {
 public:
};

MessagingResp::MessagingResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:pbfs.MessagingResp)
}
MessagingResp::MessagingResp(const MessagingResp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbfs.MessagingResp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MessagingResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MessagingResp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata MessagingResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[4]);
}

// ===================================================================

class SideWatchMeta::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const SideWatchMeta* msg);
};

const ::pbbase::Versioning&
SideWatchMeta::_Internal::api_version(const SideWatchMeta* msg) {
  return *msg->api_version_;
}
void SideWatchMeta::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
SideWatchMeta::SideWatchMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.SideWatchMeta)
}
SideWatchMeta::SideWatchMeta(const SideWatchMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.SideWatchMeta)
}

inline void SideWatchMeta::SharedCtor() {
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
api_version_ = nullptr;
}

SideWatchMeta::~SideWatchMeta() {
  // @@protoc_insertion_point(destructor:pbfs.SideWatchMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SideWatchMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
}

void SideWatchMeta::ArenaDtor(void* object) {
  SideWatchMeta* _this = reinterpret_cast< SideWatchMeta* >(object);
  (void)_this;
}
void SideWatchMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SideWatchMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SideWatchMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.SideWatchMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SideWatchMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SideWatchMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.SideWatchMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.SideWatchMeta)
  return target;
}

size_t SideWatchMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.SideWatchMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 2;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SideWatchMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SideWatchMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SideWatchMeta::GetClassData() const { return &_class_data_; }

void SideWatchMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SideWatchMeta *>(to)->MergeFrom(
      static_cast<const SideWatchMeta &>(from));
}


void SideWatchMeta::MergeFrom(const SideWatchMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.SideWatchMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SideWatchMeta::CopyFrom(const SideWatchMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.SideWatchMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SideWatchMeta::IsInitialized() const {
  return true;
}

void SideWatchMeta::InternalSwap(SideWatchMeta* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
  swap(api_version_, other->api_version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SideWatchMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[5]);
}

// ===================================================================

class FeedWatchMessage::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const FeedWatchMessage* msg);
};

const ::pbbase::Versioning&
FeedWatchMessage::_Internal::api_version(const FeedWatchMessage* msg) {
  return *msg->api_version_;
}
void FeedWatchMessage::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
FeedWatchMessage::FeedWatchMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.FeedWatchMessage)
}
FeedWatchMessage::FeedWatchMessage(const FeedWatchMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_rid().empty()) {
    rid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_rid(), 
      GetArenaForAllocation());
  }
  payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_payload().empty()) {
    payload_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_payload(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:pbfs.FeedWatchMessage)
}

inline void FeedWatchMessage::SharedCtor() {
rid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  rid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
payload_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  payload_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&api_version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&api_version_)) + sizeof(type_));
}

FeedWatchMessage::~FeedWatchMessage() {
  // @@protoc_insertion_point(destructor:pbfs.FeedWatchMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FeedWatchMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  rid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
}

void FeedWatchMessage::ArenaDtor(void* object) {
  FeedWatchMessage* _this = reinterpret_cast< FeedWatchMessage* >(object);
  (void)_this;
}
void FeedWatchMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FeedWatchMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FeedWatchMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.FeedWatchMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rid_.ClearToEmpty();
  payload_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  type_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FeedWatchMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string rid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_rid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.FeedWatchMessage.rid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes payload = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_payload();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FeedWatchMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.FeedWatchMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // string rid = 2;
  if (!this->_internal_rid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rid().data(), static_cast<int>(this->_internal_rid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.FeedWatchMessage.rid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_rid(), target);
  }

  // uint32 type = 3;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_type(), target);
  }

  // bytes payload = 4;
  if (!this->_internal_payload().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_payload(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.FeedWatchMessage)
  return target;
}

size_t FeedWatchMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.FeedWatchMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rid = 2;
  if (!this->_internal_rid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rid());
  }

  // bytes payload = 4;
  if (!this->_internal_payload().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_payload());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  // uint32 type = 3;
  if (this->_internal_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FeedWatchMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FeedWatchMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FeedWatchMessage::GetClassData() const { return &_class_data_; }

void FeedWatchMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FeedWatchMessage *>(to)->MergeFrom(
      static_cast<const FeedWatchMessage &>(from));
}


void FeedWatchMessage::MergeFrom(const FeedWatchMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.FeedWatchMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_rid().empty()) {
    _internal_set_rid(from._internal_rid());
  }
  if (!from._internal_payload().empty()) {
    _internal_set_payload(from._internal_payload());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FeedWatchMessage::CopyFrom(const FeedWatchMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.FeedWatchMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeedWatchMessage::IsInitialized() const {
  return true;
}

void FeedWatchMessage::InternalSwap(FeedWatchMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &rid_, lhs_arena,
      &other->rid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &payload_, lhs_arena,
      &other->payload_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedWatchMessage, type_)
      + sizeof(FeedWatchMessage::type_)
      - PROTOBUF_FIELD_OFFSET(FeedWatchMessage, api_version_)>(
          reinterpret_cast<char*>(&api_version_),
          reinterpret_cast<char*>(&other->api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FeedWatchMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[6]);
}

// ===================================================================

AppMeta_LabelsEntry_DoNotUse::AppMeta_LabelsEntry_DoNotUse() {}
AppMeta_LabelsEntry_DoNotUse::AppMeta_LabelsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void AppMeta_LabelsEntry_DoNotUse::MergeFrom(const AppMeta_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata AppMeta_LabelsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[7]);
}

// ===================================================================

class AppMeta::_Internal {
 public:
};

AppMeta::AppMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  labels_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.AppMeta)
}
AppMeta::AppMeta(const AppMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    app_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app().empty()) {
    app_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_app(), 
      GetArenaForAllocation());
  }
  uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uid().empty()) {
    uid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_uid(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.AppMeta)
}

inline void AppMeta::SharedCtor() {
app_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  app_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
uid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  uid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AppMeta::~AppMeta() {
  // @@protoc_insertion_point(destructor:pbfs.AppMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void AppMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  app_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AppMeta::ArenaDtor(void* object) {
  AppMeta* _this = reinterpret_cast< AppMeta* >(object);
  (void)_this;
  _this->labels_. ~MapField();
}
inline void AppMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &AppMeta::ArenaDtor);
  }
}
void AppMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AppMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.AppMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  app_.ClearToEmpty();
  uid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AppMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.AppMeta.app"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string uid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_uid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.AppMeta.uid"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> labels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&labels_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AppMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.AppMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app = 1;
  if (!this->_internal_app().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app().data(), static_cast<int>(this->_internal_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.AppMeta.app");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app(), target);
  }

  // string uid = 2;
  if (!this->_internal_uid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uid().data(), static_cast<int>(this->_internal_uid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.AppMeta.uid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uid(), target);
  }

  // map<string, string> labels = 3;
  if (!this->_internal_labels().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "pbfs.AppMeta.LabelsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "pbfs.AppMeta.LabelsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_labels().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_labels().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = AppMeta_LabelsEntry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_labels().begin();
          it != this->_internal_labels().end(); ++it) {
        target = AppMeta_LabelsEntry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.AppMeta)
  return target;
}

size_t AppMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.AppMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> labels = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_labels_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_labels().begin();
      it != this->_internal_labels().end(); ++it) {
    total_size += AppMeta_LabelsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string app = 1;
  if (!this->_internal_app().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app());
  }

  // string uid = 2;
  if (!this->_internal_uid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AppMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    AppMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AppMeta::GetClassData() const { return &_class_data_; }

void AppMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<AppMeta *>(to)->MergeFrom(
      static_cast<const AppMeta &>(from));
}


void AppMeta::MergeFrom(const AppMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.AppMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  if (!from._internal_app().empty()) {
    _internal_set_app(from._internal_app());
  }
  if (!from._internal_uid().empty()) {
    _internal_set_uid(from._internal_uid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AppMeta::CopyFrom(const AppMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.AppMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppMeta::IsInitialized() const {
  return true;
}

void AppMeta::InternalSwap(AppMeta* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  labels_.InternalSwap(&other->labels_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &app_, lhs_arena,
      &other->app_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &uid_, lhs_arena,
      &other->uid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AppMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[8]);
}

// ===================================================================

class Repository::_Internal {
 public:
};

Repository::Repository(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.Repository)
}
Repository::Repository(const Repository& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_root().empty()) {
    root_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_root(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.Repository)
}

inline void Repository::SharedCtor() {
root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  root_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Repository::~Repository() {
  // @@protoc_insertion_point(destructor:pbfs.Repository)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Repository::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Repository::ArenaDtor(void* object) {
  Repository* _this = reinterpret_cast< Repository* >(object);
  (void)_this;
}
void Repository::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Repository::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Repository::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.Repository)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  root_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Repository::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string root = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.Repository.root"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Repository::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.Repository)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string root = 1;
  if (!this->_internal_root().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_root().data(), static_cast<int>(this->_internal_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.Repository.root");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_root(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.Repository)
  return target;
}

size_t Repository::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.Repository)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string root = 1;
  if (!this->_internal_root().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_root());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Repository::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Repository::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Repository::GetClassData() const { return &_class_data_; }

void Repository::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Repository *>(to)->MergeFrom(
      static_cast<const Repository &>(from));
}


void Repository::MergeFrom(const Repository& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.Repository)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_root().empty()) {
    _internal_set_root(from._internal_root());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Repository::CopyFrom(const Repository& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.Repository)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Repository::IsInitialized() const {
  return true;
}

void Repository::InternalSwap(Repository* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &root_, lhs_arena,
      &other->root_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Repository::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[9]);
}

// ===================================================================

class RepositorySpec::_Internal {
 public:
};

RepositorySpec::RepositorySpec(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.RepositorySpec)
}
RepositorySpec::RepositorySpec(const RepositorySpec& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.RepositorySpec)
}

inline void RepositorySpec::SharedCtor() {
path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RepositorySpec::~RepositorySpec() {
  // @@protoc_insertion_point(destructor:pbfs.RepositorySpec)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RepositorySpec::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RepositorySpec::ArenaDtor(void* object) {
  RepositorySpec* _this = reinterpret_cast< RepositorySpec* >(object);
  (void)_this;
}
void RepositorySpec::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RepositorySpec::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RepositorySpec::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.RepositorySpec)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RepositorySpec::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.RepositorySpec.path"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RepositorySpec::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.RepositorySpec)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.RepositorySpec.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.RepositorySpec)
  return target;
}

size_t RepositorySpec::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.RepositorySpec)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RepositorySpec::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RepositorySpec::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RepositorySpec::GetClassData() const { return &_class_data_; }

void RepositorySpec::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RepositorySpec *>(to)->MergeFrom(
      static_cast<const RepositorySpec &>(from));
}


void RepositorySpec::MergeFrom(const RepositorySpec& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.RepositorySpec)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _internal_set_path(from._internal_path());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RepositorySpec::CopyFrom(const RepositorySpec& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.RepositorySpec)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RepositorySpec::IsInitialized() const {
  return true;
}

void RepositorySpec::InternalSwap(RepositorySpec* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &path_, lhs_arena,
      &other->path_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RepositorySpec::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[10]);
}

// ===================================================================

class FileMeta::_Internal {
 public:
  static const ::pbcommit::CommitSpec& commit_spec(const FileMeta* msg);
  static const ::pbci::ConfigItemSpec& config_item_spec(const FileMeta* msg);
  static const ::pbci::ConfigItemAttachment& config_item_attachment(const FileMeta* msg);
  static const ::pbfs::RepositorySpec& repository_spec(const FileMeta* msg);
};

const ::pbcommit::CommitSpec&
FileMeta::_Internal::commit_spec(const FileMeta* msg) {
  return *msg->commit_spec_;
}
const ::pbci::ConfigItemSpec&
FileMeta::_Internal::config_item_spec(const FileMeta* msg) {
  return *msg->config_item_spec_;
}
const ::pbci::ConfigItemAttachment&
FileMeta::_Internal::config_item_attachment(const FileMeta* msg) {
  return *msg->config_item_attachment_;
}
const ::pbfs::RepositorySpec&
FileMeta::_Internal::repository_spec(const FileMeta* msg) {
  return *msg->repository_spec_;
}
void FileMeta::clear_commit_spec() {
  if (GetArenaForAllocation() == nullptr && commit_spec_ != nullptr) {
    delete commit_spec_;
  }
  commit_spec_ = nullptr;
}
void FileMeta::clear_config_item_spec() {
  if (GetArenaForAllocation() == nullptr && config_item_spec_ != nullptr) {
    delete config_item_spec_;
  }
  config_item_spec_ = nullptr;
}
void FileMeta::clear_config_item_attachment() {
  if (GetArenaForAllocation() == nullptr && config_item_attachment_ != nullptr) {
    delete config_item_attachment_;
  }
  config_item_attachment_ = nullptr;
}
FileMeta::FileMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.FileMeta)
}
FileMeta::FileMeta(const FileMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_commit_spec()) {
    commit_spec_ = new ::pbcommit::CommitSpec(*from.commit_spec_);
  } else {
    commit_spec_ = nullptr;
  }
  if (from._internal_has_config_item_spec()) {
    config_item_spec_ = new ::pbci::ConfigItemSpec(*from.config_item_spec_);
  } else {
    config_item_spec_ = nullptr;
  }
  if (from._internal_has_config_item_attachment()) {
    config_item_attachment_ = new ::pbci::ConfigItemAttachment(*from.config_item_attachment_);
  } else {
    config_item_attachment_ = nullptr;
  }
  if (from._internal_has_repository_spec()) {
    repository_spec_ = new ::pbfs::RepositorySpec(*from.repository_spec_);
  } else {
    repository_spec_ = nullptr;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&commit_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(commit_id_));
  // @@protoc_insertion_point(copy_constructor:pbfs.FileMeta)
}

inline void FileMeta::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&commit_spec_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&commit_id_) -
    reinterpret_cast<char*>(&commit_spec_)) + sizeof(commit_id_));
}

FileMeta::~FileMeta() {
  // @@protoc_insertion_point(destructor:pbfs.FileMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void FileMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete commit_spec_;
  if (this != internal_default_instance()) delete config_item_spec_;
  if (this != internal_default_instance()) delete config_item_attachment_;
  if (this != internal_default_instance()) delete repository_spec_;
}

void FileMeta::ArenaDtor(void* object) {
  FileMeta* _this = reinterpret_cast< FileMeta* >(object);
  (void)_this;
}
void FileMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FileMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FileMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.FileMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && commit_spec_ != nullptr) {
    delete commit_spec_;
  }
  commit_spec_ = nullptr;
  if (GetArenaForAllocation() == nullptr && config_item_spec_ != nullptr) {
    delete config_item_spec_;
  }
  config_item_spec_ = nullptr;
  if (GetArenaForAllocation() == nullptr && config_item_attachment_ != nullptr) {
    delete config_item_attachment_;
  }
  config_item_attachment_ = nullptr;
  if (GetArenaForAllocation() == nullptr && repository_spec_ != nullptr) {
    delete repository_spec_;
  }
  repository_spec_ = nullptr;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&commit_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(commit_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FileMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 commit_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          commit_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbcommit.CommitSpec commit_spec = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_commit_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbci.ConfigItemSpec config_item_spec = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_item_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbci.ConfigItemAttachment config_item_attachment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_config_item_attachment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.RepositorySpec repository_spec = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_repository_spec(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FileMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.FileMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // uint32 commit_id = 2;
  if (this->_internal_commit_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_commit_id(), target);
  }

  // .pbcommit.CommitSpec commit_spec = 3;
  if (this->_internal_has_commit_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::commit_spec(this), target, stream);
  }

  // .pbci.ConfigItemSpec config_item_spec = 4;
  if (this->_internal_has_config_item_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::config_item_spec(this), target, stream);
  }

  // .pbci.ConfigItemAttachment config_item_attachment = 5;
  if (this->_internal_has_config_item_attachment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::config_item_attachment(this), target, stream);
  }

  // .pbfs.RepositorySpec repository_spec = 6;
  if (this->_internal_has_repository_spec()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::repository_spec(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.FileMeta)
  return target;
}

size_t FileMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.FileMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pbcommit.CommitSpec commit_spec = 3;
  if (this->_internal_has_commit_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *commit_spec_);
  }

  // .pbci.ConfigItemSpec config_item_spec = 4;
  if (this->_internal_has_config_item_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_item_spec_);
  }

  // .pbci.ConfigItemAttachment config_item_attachment = 5;
  if (this->_internal_has_config_item_attachment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *config_item_attachment_);
  }

  // .pbfs.RepositorySpec repository_spec = 6;
  if (this->_internal_has_repository_spec()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *repository_spec_);
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  // uint32 commit_id = 2;
  if (this->_internal_commit_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_commit_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FileMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    FileMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FileMeta::GetClassData() const { return &_class_data_; }

void FileMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<FileMeta *>(to)->MergeFrom(
      static_cast<const FileMeta &>(from));
}


void FileMeta::MergeFrom(const FileMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.FileMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_commit_spec()) {
    _internal_mutable_commit_spec()->::pbcommit::CommitSpec::MergeFrom(from._internal_commit_spec());
  }
  if (from._internal_has_config_item_spec()) {
    _internal_mutable_config_item_spec()->::pbci::ConfigItemSpec::MergeFrom(from._internal_config_item_spec());
  }
  if (from._internal_has_config_item_attachment()) {
    _internal_mutable_config_item_attachment()->::pbci::ConfigItemAttachment::MergeFrom(from._internal_config_item_attachment());
  }
  if (from._internal_has_repository_spec()) {
    _internal_mutable_repository_spec()->::pbfs::RepositorySpec::MergeFrom(from._internal_repository_spec());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_commit_id() != 0) {
    _internal_set_commit_id(from._internal_commit_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FileMeta::CopyFrom(const FileMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.FileMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileMeta::IsInitialized() const {
  return true;
}

void FileMeta::InternalSwap(FileMeta* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FileMeta, commit_id_)
      + sizeof(FileMeta::commit_id_)
      - PROTOBUF_FIELD_OFFSET(FileMeta, commit_spec_)>(
          reinterpret_cast<char*>(&commit_spec_),
          reinterpret_cast<char*>(&other->commit_spec_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FileMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[11]);
}

// ===================================================================

class PullAppFileMetaReq::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const PullAppFileMetaReq* msg);
  static const ::pbfs::AppMeta& app_meta(const PullAppFileMetaReq* msg);
};

const ::pbbase::Versioning&
PullAppFileMetaReq::_Internal::api_version(const PullAppFileMetaReq* msg) {
  return *msg->api_version_;
}
const ::pbfs::AppMeta&
PullAppFileMetaReq::_Internal::app_meta(const PullAppFileMetaReq* msg) {
  return *msg->app_meta_;
}
void PullAppFileMetaReq::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
PullAppFileMetaReq::PullAppFileMetaReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.PullAppFileMetaReq)
}
PullAppFileMetaReq::PullAppFileMetaReq(const PullAppFileMetaReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  if (from._internal_has_app_meta()) {
    app_meta_ = new ::pbfs::AppMeta(*from.app_meta_);
  } else {
    app_meta_ = nullptr;
  }
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.PullAppFileMetaReq)
}

inline void PullAppFileMetaReq::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&api_version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biz_id_) -
    reinterpret_cast<char*>(&api_version_)) + sizeof(biz_id_));
}

PullAppFileMetaReq::~PullAppFileMetaReq() {
  // @@protoc_insertion_point(destructor:pbfs.PullAppFileMetaReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PullAppFileMetaReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
  if (this != internal_default_instance()) delete app_meta_;
}

void PullAppFileMetaReq::ArenaDtor(void* object) {
  PullAppFileMetaReq* _this = reinterpret_cast< PullAppFileMetaReq* >(object);
  (void)_this;
}
void PullAppFileMetaReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullAppFileMetaReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullAppFileMetaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.PullAppFileMetaReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  if (GetArenaForAllocation() == nullptr && app_meta_ != nullptr) {
    delete app_meta_;
  }
  app_meta_ = nullptr;
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullAppFileMetaReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 biz_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.AppMeta app_meta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.PullAppFileMetaReq.token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.PullAppFileMetaReq.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PullAppFileMetaReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.PullAppFileMetaReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // uint32 biz_id = 2;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_biz_id(), target);
  }

  // .pbfs.AppMeta app_meta = 3;
  if (this->_internal_has_app_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::app_meta(this), target, stream);
  }

  // string token = 4;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.PullAppFileMetaReq.token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_token(), target);
  }

  // string key = 5;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.PullAppFileMetaReq.key");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.PullAppFileMetaReq)
  return target;
}

size_t PullAppFileMetaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.PullAppFileMetaReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 4;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string key = 5;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  // .pbfs.AppMeta app_meta = 3;
  if (this->_internal_has_app_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_meta_);
  }

  // uint32 biz_id = 2;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PullAppFileMetaReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PullAppFileMetaReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PullAppFileMetaReq::GetClassData() const { return &_class_data_; }

void PullAppFileMetaReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PullAppFileMetaReq *>(to)->MergeFrom(
      static_cast<const PullAppFileMetaReq &>(from));
}


void PullAppFileMetaReq::MergeFrom(const PullAppFileMetaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.PullAppFileMetaReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  if (from._internal_has_app_meta()) {
    _internal_mutable_app_meta()->::pbfs::AppMeta::MergeFrom(from._internal_app_meta());
  }
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PullAppFileMetaReq::CopyFrom(const PullAppFileMetaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.PullAppFileMetaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullAppFileMetaReq::IsInitialized() const {
  return true;
}

void PullAppFileMetaReq::InternalSwap(PullAppFileMetaReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PullAppFileMetaReq, biz_id_)
      + sizeof(PullAppFileMetaReq::biz_id_)
      - PROTOBUF_FIELD_OFFSET(PullAppFileMetaReq, api_version_)>(
          reinterpret_cast<char*>(&api_version_),
          reinterpret_cast<char*>(&other->api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PullAppFileMetaReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[12]);
}

// ===================================================================

class PullAppFileMetaResp::_Internal {
 public:
  static const ::pbfs::Repository& repository(const PullAppFileMetaResp* msg);
  static const ::pbhook::HookSpec& pre_hook(const PullAppFileMetaResp* msg);
  static const ::pbhook::HookSpec& post_hook(const PullAppFileMetaResp* msg);
};

const ::pbfs::Repository&
PullAppFileMetaResp::_Internal::repository(const PullAppFileMetaResp* msg) {
  return *msg->repository_;
}
const ::pbhook::HookSpec&
PullAppFileMetaResp::_Internal::pre_hook(const PullAppFileMetaResp* msg) {
  return *msg->pre_hook_;
}
const ::pbhook::HookSpec&
PullAppFileMetaResp::_Internal::post_hook(const PullAppFileMetaResp* msg) {
  return *msg->post_hook_;
}
void PullAppFileMetaResp::clear_pre_hook() {
  if (GetArenaForAllocation() == nullptr && pre_hook_ != nullptr) {
    delete pre_hook_;
  }
  pre_hook_ = nullptr;
}
void PullAppFileMetaResp::clear_post_hook() {
  if (GetArenaForAllocation() == nullptr && post_hook_ != nullptr) {
    delete post_hook_;
  }
  post_hook_ = nullptr;
}
PullAppFileMetaResp::PullAppFileMetaResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  file_metas_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.PullAppFileMetaResp)
}
PullAppFileMetaResp::PullAppFileMetaResp(const PullAppFileMetaResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      file_metas_(from.file_metas_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_repository()) {
    repository_ = new ::pbfs::Repository(*from.repository_);
  } else {
    repository_ = nullptr;
  }
  if (from._internal_has_pre_hook()) {
    pre_hook_ = new ::pbhook::HookSpec(*from.pre_hook_);
  } else {
    pre_hook_ = nullptr;
  }
  if (from._internal_has_post_hook()) {
    post_hook_ = new ::pbhook::HookSpec(*from.post_hook_);
  } else {
    post_hook_ = nullptr;
  }
  release_id_ = from.release_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.PullAppFileMetaResp)
}

inline void PullAppFileMetaResp::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&repository_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&release_id_) -
    reinterpret_cast<char*>(&repository_)) + sizeof(release_id_));
}

PullAppFileMetaResp::~PullAppFileMetaResp() {
  // @@protoc_insertion_point(destructor:pbfs.PullAppFileMetaResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PullAppFileMetaResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete repository_;
  if (this != internal_default_instance()) delete pre_hook_;
  if (this != internal_default_instance()) delete post_hook_;
}

void PullAppFileMetaResp::ArenaDtor(void* object) {
  PullAppFileMetaResp* _this = reinterpret_cast< PullAppFileMetaResp* >(object);
  (void)_this;
}
void PullAppFileMetaResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullAppFileMetaResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullAppFileMetaResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.PullAppFileMetaResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  file_metas_.Clear();
  if (GetArenaForAllocation() == nullptr && repository_ != nullptr) {
    delete repository_;
  }
  repository_ = nullptr;
  if (GetArenaForAllocation() == nullptr && pre_hook_ != nullptr) {
    delete pre_hook_;
  }
  pre_hook_ = nullptr;
  if (GetArenaForAllocation() == nullptr && post_hook_ != nullptr) {
    delete post_hook_;
  }
  post_hook_ = nullptr;
  release_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullAppFileMetaResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 release_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          release_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.Repository repository = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_repository(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .pbfs.FileMeta file_metas = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_file_metas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .pbhook.HookSpec pre_hook = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_pre_hook(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbhook.HookSpec post_hook = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_post_hook(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PullAppFileMetaResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.PullAppFileMetaResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 release_id = 1;
  if (this->_internal_release_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_release_id(), target);
  }

  // .pbfs.Repository repository = 2;
  if (this->_internal_has_repository()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::repository(this), target, stream);
  }

  // repeated .pbfs.FileMeta file_metas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_file_metas_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_file_metas(i), target, stream);
  }

  // .pbhook.HookSpec pre_hook = 4;
  if (this->_internal_has_pre_hook()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::pre_hook(this), target, stream);
  }

  // .pbhook.HookSpec post_hook = 5;
  if (this->_internal_has_post_hook()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::post_hook(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.PullAppFileMetaResp)
  return target;
}

size_t PullAppFileMetaResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.PullAppFileMetaResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pbfs.FileMeta file_metas = 3;
  total_size += 1UL * this->_internal_file_metas_size();
  for (const auto& msg : this->file_metas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .pbfs.Repository repository = 2;
  if (this->_internal_has_repository()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *repository_);
  }

  // .pbhook.HookSpec pre_hook = 4;
  if (this->_internal_has_pre_hook()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *pre_hook_);
  }

  // .pbhook.HookSpec post_hook = 5;
  if (this->_internal_has_post_hook()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *post_hook_);
  }

  // uint32 release_id = 1;
  if (this->_internal_release_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_release_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PullAppFileMetaResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PullAppFileMetaResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PullAppFileMetaResp::GetClassData() const { return &_class_data_; }

void PullAppFileMetaResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PullAppFileMetaResp *>(to)->MergeFrom(
      static_cast<const PullAppFileMetaResp &>(from));
}


void PullAppFileMetaResp::MergeFrom(const PullAppFileMetaResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.PullAppFileMetaResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  file_metas_.MergeFrom(from.file_metas_);
  if (from._internal_has_repository()) {
    _internal_mutable_repository()->::pbfs::Repository::MergeFrom(from._internal_repository());
  }
  if (from._internal_has_pre_hook()) {
    _internal_mutable_pre_hook()->::pbhook::HookSpec::MergeFrom(from._internal_pre_hook());
  }
  if (from._internal_has_post_hook()) {
    _internal_mutable_post_hook()->::pbhook::HookSpec::MergeFrom(from._internal_post_hook());
  }
  if (from._internal_release_id() != 0) {
    _internal_set_release_id(from._internal_release_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PullAppFileMetaResp::CopyFrom(const PullAppFileMetaResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.PullAppFileMetaResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullAppFileMetaResp::IsInitialized() const {
  return true;
}

void PullAppFileMetaResp::InternalSwap(PullAppFileMetaResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  file_metas_.InternalSwap(&other->file_metas_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PullAppFileMetaResp, release_id_)
      + sizeof(PullAppFileMetaResp::release_id_)
      - PROTOBUF_FIELD_OFFSET(PullAppFileMetaResp, repository_)>(
          reinterpret_cast<char*>(&repository_),
          reinterpret_cast<char*>(&other->repository_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PullAppFileMetaResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[13]);
}

// ===================================================================

class GetDownloadURLReq::_Internal {
 public:
  static const ::pbbase::Versioning& api_version(const GetDownloadURLReq* msg);
  static const ::pbfs::FileMeta& file_meta(const GetDownloadURLReq* msg);
};

const ::pbbase::Versioning&
GetDownloadURLReq::_Internal::api_version(const GetDownloadURLReq* msg) {
  return *msg->api_version_;
}
const ::pbfs::FileMeta&
GetDownloadURLReq::_Internal::file_meta(const GetDownloadURLReq* msg) {
  return *msg->file_meta_;
}
void GetDownloadURLReq::clear_api_version() {
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
}
GetDownloadURLReq::GetDownloadURLReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.GetDownloadURLReq)
}
GetDownloadURLReq::GetDownloadURLReq(const GetDownloadURLReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    token_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_token(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_api_version()) {
    api_version_ = new ::pbbase::Versioning(*from.api_version_);
  } else {
    api_version_ = nullptr;
  }
  if (from._internal_has_file_meta()) {
    file_meta_ = new ::pbfs::FileMeta(*from.file_meta_);
  } else {
    file_meta_ = nullptr;
  }
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.GetDownloadURLReq)
}

inline void GetDownloadURLReq::SharedCtor() {
token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&api_version_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biz_id_) -
    reinterpret_cast<char*>(&api_version_)) + sizeof(biz_id_));
}

GetDownloadURLReq::~GetDownloadURLReq() {
  // @@protoc_insertion_point(destructor:pbfs.GetDownloadURLReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDownloadURLReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete api_version_;
  if (this != internal_default_instance()) delete file_meta_;
}

void GetDownloadURLReq::ArenaDtor(void* object) {
  GetDownloadURLReq* _this = reinterpret_cast< GetDownloadURLReq* >(object);
  (void)_this;
}
void GetDownloadURLReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDownloadURLReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDownloadURLReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.GetDownloadURLReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && api_version_ != nullptr) {
    delete api_version_;
  }
  api_version_ = nullptr;
  if (GetArenaForAllocation() == nullptr && file_meta_ != nullptr) {
    delete file_meta_;
  }
  file_meta_ = nullptr;
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDownloadURLReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .pbbase.Versioning api_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_api_version(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 biz_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.FileMeta file_meta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_file_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.GetDownloadURLReq.token"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDownloadURLReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.GetDownloadURLReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::api_version(this), target, stream);
  }

  // uint32 biz_id = 2;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_biz_id(), target);
  }

  // .pbfs.FileMeta file_meta = 3;
  if (this->_internal_has_file_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::file_meta(this), target, stream);
  }

  // string token = 4;
  if (!this->_internal_token().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.GetDownloadURLReq.token");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.GetDownloadURLReq)
  return target;
}

size_t GetDownloadURLReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.GetDownloadURLReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 4;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // .pbbase.Versioning api_version = 1;
  if (this->_internal_has_api_version()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *api_version_);
  }

  // .pbfs.FileMeta file_meta = 3;
  if (this->_internal_has_file_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *file_meta_);
  }

  // uint32 biz_id = 2;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDownloadURLReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDownloadURLReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDownloadURLReq::GetClassData() const { return &_class_data_; }

void GetDownloadURLReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDownloadURLReq *>(to)->MergeFrom(
      static_cast<const GetDownloadURLReq &>(from));
}


void GetDownloadURLReq::MergeFrom(const GetDownloadURLReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.GetDownloadURLReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _internal_set_token(from._internal_token());
  }
  if (from._internal_has_api_version()) {
    _internal_mutable_api_version()->::pbbase::Versioning::MergeFrom(from._internal_api_version());
  }
  if (from._internal_has_file_meta()) {
    _internal_mutable_file_meta()->::pbfs::FileMeta::MergeFrom(from._internal_file_meta());
  }
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDownloadURLReq::CopyFrom(const GetDownloadURLReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.GetDownloadURLReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDownloadURLReq::IsInitialized() const {
  return true;
}

void GetDownloadURLReq::InternalSwap(GetDownloadURLReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &token_, lhs_arena,
      &other->token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDownloadURLReq, biz_id_)
      + sizeof(GetDownloadURLReq::biz_id_)
      - PROTOBUF_FIELD_OFFSET(GetDownloadURLReq, api_version_)>(
          reinterpret_cast<char*>(&api_version_),
          reinterpret_cast<char*>(&other->api_version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDownloadURLReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[14]);
}

// ===================================================================

class GetDownloadURLResp::_Internal {
 public:
};

GetDownloadURLResp::GetDownloadURLResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.GetDownloadURLResp)
}
GetDownloadURLResp::GetDownloadURLResp(const GetDownloadURLResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.GetDownloadURLResp)
}

inline void GetDownloadURLResp::SharedCtor() {
url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDownloadURLResp::~GetDownloadURLResp() {
  // @@protoc_insertion_point(destructor:pbfs.GetDownloadURLResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetDownloadURLResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDownloadURLResp::ArenaDtor(void* object) {
  GetDownloadURLResp* _this = reinterpret_cast< GetDownloadURLResp* >(object);
  (void)_this;
}
void GetDownloadURLResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDownloadURLResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetDownloadURLResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.GetDownloadURLResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDownloadURLResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.GetDownloadURLResp.url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDownloadURLResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.GetDownloadURLResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.GetDownloadURLResp.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.GetDownloadURLResp)
  return target;
}

size_t GetDownloadURLResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.GetDownloadURLResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDownloadURLResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetDownloadURLResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDownloadURLResp::GetClassData() const { return &_class_data_; }

void GetDownloadURLResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetDownloadURLResp *>(to)->MergeFrom(
      static_cast<const GetDownloadURLResp &>(from));
}


void GetDownloadURLResp::MergeFrom(const GetDownloadURLResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.GetDownloadURLResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _internal_set_url(from._internal_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDownloadURLResp::CopyFrom(const GetDownloadURLResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.GetDownloadURLResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDownloadURLResp::IsInitialized() const {
  return true;
}

void GetDownloadURLResp::InternalSwap(GetDownloadURLResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &url_, lhs_arena,
      &other->url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDownloadURLResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[15]);
}

// ===================================================================

class App::_Internal {
 public:
  static const ::pbbase::Revision& revision(const App* msg);
};

const ::pbbase::Revision&
App::_Internal::revision(const App* msg) {
  return *msg->revision_;
}
void App::clear_revision() {
  if (GetArenaForAllocation() == nullptr && revision_ != nullptr) {
    delete revision_;
  }
  revision_ = nullptr;
}
App::App(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.App)
}
App::App(const App& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  config_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    config_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_type().empty()) {
    config_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_config_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_revision()) {
    revision_ = new ::pbbase::Revision(*from.revision_);
  } else {
    revision_ = nullptr;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.App)
}

inline void App::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
config_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  config_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&revision_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&revision_)) + sizeof(id_));
}

App::~App() {
  // @@protoc_insertion_point(destructor:pbfs.App)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void App::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  config_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete revision_;
}

void App::ArenaDtor(void* object) {
  App* _this = reinterpret_cast< App* >(object);
  (void)_this;
}
void App::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void App::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.App)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  config_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && revision_ != nullptr) {
    delete revision_;
  }
  revision_ = nullptr;
  id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* App::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.App.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string config_type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_config_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.App.config_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbbase.Revision revision = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_revision(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* App::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.App)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.App.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string config_type = 3;
  if (!this->_internal_config_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_type().data(), static_cast<int>(this->_internal_config_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.App.config_type");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_config_type(), target);
  }

  // .pbbase.Revision revision = 4;
  if (this->_internal_has_revision()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::revision(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.App)
  return target;
}

size_t App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.App)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string config_type = 3;
  if (!this->_internal_config_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_type());
  }

  // .pbbase.Revision revision = 4;
  if (this->_internal_has_revision()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *revision_);
  }

  // uint32 id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData App::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    App::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*App::GetClassData() const { return &_class_data_; }

void App::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<App *>(to)->MergeFrom(
      static_cast<const App &>(from));
}


void App::MergeFrom(const App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.App)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_config_type().empty()) {
    _internal_set_config_type(from._internal_config_type());
  }
  if (from._internal_has_revision()) {
    _internal_mutable_revision()->::pbbase::Revision::MergeFrom(from._internal_revision());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void App::CopyFrom(const App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool App::IsInitialized() const {
  return true;
}

void App::InternalSwap(App* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &config_type_, lhs_arena,
      &other->config_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(App, id_)
      + sizeof(App::id_)
      - PROTOBUF_FIELD_OFFSET(App, revision_)>(
          reinterpret_cast<char*>(&revision_),
          reinterpret_cast<char*>(&other->revision_));
}

::PROTOBUF_NAMESPACE_ID::Metadata App::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[16]);
}

// ===================================================================

class ListAppsReq::_Internal {
 public:
};

ListAppsReq::ListAppsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  match_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.ListAppsReq)
}
ListAppsReq::ListAppsReq(const ListAppsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      match_(from.match_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.ListAppsReq)
}

inline void ListAppsReq::SharedCtor() {
biz_id_ = 0u;
}

ListAppsReq::~ListAppsReq() {
  // @@protoc_insertion_point(destructor:pbfs.ListAppsReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListAppsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListAppsReq::ArenaDtor(void* object) {
  ListAppsReq* _this = reinterpret_cast< ListAppsReq* >(object);
  (void)_this;
}
void ListAppsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListAppsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAppsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.ListAppsReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.Clear();
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAppsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 biz_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string match = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_match();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.ListAppsReq.match"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAppsReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.ListAppsReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_biz_id(), target);
  }

  // repeated string match = 2;
  for (int i = 0, n = this->_internal_match_size(); i < n; i++) {
    const auto& s = this->_internal_match(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.ListAppsReq.match");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.ListAppsReq)
  return target;
}

size_t ListAppsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.ListAppsReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string match = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(match_.size());
  for (int i = 0, n = match_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      match_.Get(i));
  }

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAppsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAppsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAppsReq::GetClassData() const { return &_class_data_; }

void ListAppsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAppsReq *>(to)->MergeFrom(
      static_cast<const ListAppsReq &>(from));
}


void ListAppsReq::MergeFrom(const ListAppsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.ListAppsReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  match_.MergeFrom(from.match_);
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAppsReq::CopyFrom(const ListAppsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.ListAppsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAppsReq::IsInitialized() const {
  return true;
}

void ListAppsReq::InternalSwap(ListAppsReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  match_.InternalSwap(&other->match_);
  swap(biz_id_, other->biz_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAppsReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[17]);
}

// ===================================================================

class ListAppsResp::_Internal {
 public:
};

ListAppsResp::ListAppsResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  apps_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.ListAppsResp)
}
ListAppsResp::ListAppsResp(const ListAppsResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apps_(from.apps_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbfs.ListAppsResp)
}

inline void ListAppsResp::SharedCtor() {
}

ListAppsResp::~ListAppsResp() {
  // @@protoc_insertion_point(destructor:pbfs.ListAppsResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListAppsResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListAppsResp::ArenaDtor(void* object) {
  ListAppsResp* _this = reinterpret_cast< ListAppsResp* >(object);
  (void)_this;
}
void ListAppsResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListAppsResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListAppsResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.ListAppsResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apps_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListAppsResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .pbfs.App apps = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_apps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ListAppsResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.ListAppsResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pbfs.App apps = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_apps(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.ListAppsResp)
  return target;
}

size_t ListAppsResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.ListAppsResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pbfs.App apps = 1;
  total_size += 1UL * this->_internal_apps_size();
  for (const auto& msg : this->apps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListAppsResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListAppsResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListAppsResp::GetClassData() const { return &_class_data_; }

void ListAppsResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListAppsResp *>(to)->MergeFrom(
      static_cast<const ListAppsResp &>(from));
}


void ListAppsResp::MergeFrom(const ListAppsResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.ListAppsResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  apps_.MergeFrom(from.apps_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListAppsResp::CopyFrom(const ListAppsResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.ListAppsResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListAppsResp::IsInitialized() const {
  return true;
}

void ListAppsResp::InternalSwap(ListAppsResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  apps_.InternalSwap(&other->apps_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListAppsResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[18]);
}

// ===================================================================

class PullKvMetaReq::_Internal {
 public:
  static const ::pbfs::AppMeta& app_meta(const PullKvMetaReq* msg);
};

const ::pbfs::AppMeta&
PullKvMetaReq::_Internal::app_meta(const PullKvMetaReq* msg) {
  return *msg->app_meta_;
}
PullKvMetaReq::PullKvMetaReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  match_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.PullKvMetaReq)
}
PullKvMetaReq::PullKvMetaReq(const PullKvMetaReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      match_(from.match_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_app_meta()) {
    app_meta_ = new ::pbfs::AppMeta(*from.app_meta_);
  } else {
    app_meta_ = nullptr;
  }
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.PullKvMetaReq)
}

inline void PullKvMetaReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_meta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biz_id_) -
    reinterpret_cast<char*>(&app_meta_)) + sizeof(biz_id_));
}

PullKvMetaReq::~PullKvMetaReq() {
  // @@protoc_insertion_point(destructor:pbfs.PullKvMetaReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PullKvMetaReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete app_meta_;
}

void PullKvMetaReq::ArenaDtor(void* object) {
  PullKvMetaReq* _this = reinterpret_cast< PullKvMetaReq* >(object);
  (void)_this;
}
void PullKvMetaReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullKvMetaReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullKvMetaReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.PullKvMetaReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_.Clear();
  if (GetArenaForAllocation() == nullptr && app_meta_ != nullptr) {
    delete app_meta_;
  }
  app_meta_ = nullptr;
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullKvMetaReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 biz_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.AppMeta app_meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string match = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_match();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.PullKvMetaReq.match"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PullKvMetaReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.PullKvMetaReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_biz_id(), target);
  }

  // .pbfs.AppMeta app_meta = 2;
  if (this->_internal_has_app_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::app_meta(this), target, stream);
  }

  // repeated string match = 3;
  for (int i = 0, n = this->_internal_match_size(); i < n; i++) {
    const auto& s = this->_internal_match(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.PullKvMetaReq.match");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.PullKvMetaReq)
  return target;
}

size_t PullKvMetaReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.PullKvMetaReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string match = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(match_.size());
  for (int i = 0, n = match_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      match_.Get(i));
  }

  // .pbfs.AppMeta app_meta = 2;
  if (this->_internal_has_app_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_meta_);
  }

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PullKvMetaReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PullKvMetaReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PullKvMetaReq::GetClassData() const { return &_class_data_; }

void PullKvMetaReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PullKvMetaReq *>(to)->MergeFrom(
      static_cast<const PullKvMetaReq &>(from));
}


void PullKvMetaReq::MergeFrom(const PullKvMetaReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.PullKvMetaReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  match_.MergeFrom(from.match_);
  if (from._internal_has_app_meta()) {
    _internal_mutable_app_meta()->::pbfs::AppMeta::MergeFrom(from._internal_app_meta());
  }
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PullKvMetaReq::CopyFrom(const PullKvMetaReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.PullKvMetaReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullKvMetaReq::IsInitialized() const {
  return true;
}

void PullKvMetaReq::InternalSwap(PullKvMetaReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  match_.InternalSwap(&other->match_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PullKvMetaReq, biz_id_)
      + sizeof(PullKvMetaReq::biz_id_)
      - PROTOBUF_FIELD_OFFSET(PullKvMetaReq, app_meta_)>(
          reinterpret_cast<char*>(&app_meta_),
          reinterpret_cast<char*>(&other->app_meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PullKvMetaReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[19]);
}

// ===================================================================

class PullKvMetaResp::_Internal {
 public:
};

PullKvMetaResp::PullKvMetaResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  kv_metas_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.PullKvMetaResp)
}
PullKvMetaResp::PullKvMetaResp(const PullKvMetaResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      kv_metas_(from.kv_metas_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  release_id_ = from.release_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.PullKvMetaResp)
}

inline void PullKvMetaResp::SharedCtor() {
release_id_ = 0u;
}

PullKvMetaResp::~PullKvMetaResp() {
  // @@protoc_insertion_point(destructor:pbfs.PullKvMetaResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PullKvMetaResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PullKvMetaResp::ArenaDtor(void* object) {
  PullKvMetaResp* _this = reinterpret_cast< PullKvMetaResp* >(object);
  (void)_this;
}
void PullKvMetaResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PullKvMetaResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PullKvMetaResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.PullKvMetaResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_metas_.Clear();
  release_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PullKvMetaResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 release_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          release_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .pbfs.KvMeta kv_metas = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_kv_metas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PullKvMetaResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.PullKvMetaResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 release_id = 1;
  if (this->_internal_release_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_release_id(), target);
  }

  // repeated .pbfs.KvMeta kv_metas = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_kv_metas_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_kv_metas(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.PullKvMetaResp)
  return target;
}

size_t PullKvMetaResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.PullKvMetaResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pbfs.KvMeta kv_metas = 3;
  total_size += 1UL * this->_internal_kv_metas_size();
  for (const auto& msg : this->kv_metas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 release_id = 1;
  if (this->_internal_release_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_release_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PullKvMetaResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PullKvMetaResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PullKvMetaResp::GetClassData() const { return &_class_data_; }

void PullKvMetaResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PullKvMetaResp *>(to)->MergeFrom(
      static_cast<const PullKvMetaResp &>(from));
}


void PullKvMetaResp::MergeFrom(const PullKvMetaResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.PullKvMetaResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  kv_metas_.MergeFrom(from.kv_metas_);
  if (from._internal_release_id() != 0) {
    _internal_set_release_id(from._internal_release_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PullKvMetaResp::CopyFrom(const PullKvMetaResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.PullKvMetaResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PullKvMetaResp::IsInitialized() const {
  return true;
}

void PullKvMetaResp::InternalSwap(PullKvMetaResp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  kv_metas_.InternalSwap(&other->kv_metas_);
  swap(release_id_, other->release_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PullKvMetaResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[20]);
}

// ===================================================================

class KvMeta::_Internal {
 public:
  static const ::pbbase::Revision& revision(const KvMeta* msg);
  static const ::pbkv::KvAttachment& kv_attachment(const KvMeta* msg);
};

const ::pbbase::Revision&
KvMeta::_Internal::revision(const KvMeta* msg) {
  return *msg->revision_;
}
const ::pbkv::KvAttachment&
KvMeta::_Internal::kv_attachment(const KvMeta* msg) {
  return *msg->kv_attachment_;
}
void KvMeta::clear_revision() {
  if (GetArenaForAllocation() == nullptr && revision_ != nullptr) {
    delete revision_;
  }
  revision_ = nullptr;
}
void KvMeta::clear_kv_attachment() {
  if (GetArenaForAllocation() == nullptr && kv_attachment_ != nullptr) {
    delete kv_attachment_;
  }
  kv_attachment_ = nullptr;
}
KvMeta::KvMeta(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.KvMeta)
}
KvMeta::KvMeta(const KvMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  kv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    kv_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kv_type().empty()) {
    kv_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kv_type(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_revision()) {
    revision_ = new ::pbbase::Revision(*from.revision_);
  } else {
    revision_ = nullptr;
  }
  if (from._internal_has_kv_attachment()) {
    kv_attachment_ = new ::pbkv::KvAttachment(*from.kv_attachment_);
  } else {
    kv_attachment_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.KvMeta)
}

inline void KvMeta::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
kv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  kv_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&revision_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&kv_attachment_) -
    reinterpret_cast<char*>(&revision_)) + sizeof(kv_attachment_));
}

KvMeta::~KvMeta() {
  // @@protoc_insertion_point(destructor:pbfs.KvMeta)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void KvMeta::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  kv_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete revision_;
  if (this != internal_default_instance()) delete kv_attachment_;
}

void KvMeta::ArenaDtor(void* object) {
  KvMeta* _this = reinterpret_cast< KvMeta* >(object);
  (void)_this;
}
void KvMeta::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void KvMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void KvMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.KvMeta)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  kv_type_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && revision_ != nullptr) {
    delete revision_;
  }
  revision_ = nullptr;
  if (GetArenaForAllocation() == nullptr && kv_attachment_ != nullptr) {
    delete kv_attachment_;
  }
  kv_attachment_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* KvMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.KvMeta.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string kv_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_kv_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.KvMeta.kv_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbbase.Revision revision = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_revision(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbkv.KvAttachment kv_attachment = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_kv_attachment(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* KvMeta::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.KvMeta)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.KvMeta.key");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_key(), target);
  }

  // string kv_type = 2;
  if (!this->_internal_kv_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kv_type().data(), static_cast<int>(this->_internal_kv_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.KvMeta.kv_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_kv_type(), target);
  }

  // .pbbase.Revision revision = 3;
  if (this->_internal_has_revision()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::revision(this), target, stream);
  }

  // .pbkv.KvAttachment kv_attachment = 4;
  if (this->_internal_has_kv_attachment()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::kv_attachment(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.KvMeta)
  return target;
}

size_t KvMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.KvMeta)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // string kv_type = 2;
  if (!this->_internal_kv_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kv_type());
  }

  // .pbbase.Revision revision = 3;
  if (this->_internal_has_revision()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *revision_);
  }

  // .pbkv.KvAttachment kv_attachment = 4;
  if (this->_internal_has_kv_attachment()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *kv_attachment_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData KvMeta::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    KvMeta::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*KvMeta::GetClassData() const { return &_class_data_; }

void KvMeta::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<KvMeta *>(to)->MergeFrom(
      static_cast<const KvMeta &>(from));
}


void KvMeta::MergeFrom(const KvMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.KvMeta)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (!from._internal_kv_type().empty()) {
    _internal_set_kv_type(from._internal_kv_type());
  }
  if (from._internal_has_revision()) {
    _internal_mutable_revision()->::pbbase::Revision::MergeFrom(from._internal_revision());
  }
  if (from._internal_has_kv_attachment()) {
    _internal_mutable_kv_attachment()->::pbkv::KvAttachment::MergeFrom(from._internal_kv_attachment());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void KvMeta::CopyFrom(const KvMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.KvMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KvMeta::IsInitialized() const {
  return true;
}

void KvMeta::InternalSwap(KvMeta* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &kv_type_, lhs_arena,
      &other->kv_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KvMeta, kv_attachment_)
      + sizeof(KvMeta::kv_attachment_)
      - PROTOBUF_FIELD_OFFSET(KvMeta, revision_)>(
          reinterpret_cast<char*>(&revision_),
          reinterpret_cast<char*>(&other->revision_));
}

::PROTOBUF_NAMESPACE_ID::Metadata KvMeta::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[21]);
}

// ===================================================================

class GetKvValueReq::_Internal {
 public:
  static const ::pbfs::AppMeta& app_meta(const GetKvValueReq* msg);
};

const ::pbfs::AppMeta&
GetKvValueReq::_Internal::app_meta(const GetKvValueReq* msg) {
  return *msg->app_meta_;
}
GetKvValueReq::GetKvValueReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.GetKvValueReq)
}
GetKvValueReq::GetKvValueReq(const GetKvValueReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_key(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_app_meta()) {
    app_meta_ = new ::pbfs::AppMeta(*from.app_meta_);
  } else {
    app_meta_ = nullptr;
  }
  biz_id_ = from.biz_id_;
  // @@protoc_insertion_point(copy_constructor:pbfs.GetKvValueReq)
}

inline void GetKvValueReq::SharedCtor() {
key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  key_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&app_meta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&biz_id_) -
    reinterpret_cast<char*>(&app_meta_)) + sizeof(biz_id_));
}

GetKvValueReq::~GetKvValueReq() {
  // @@protoc_insertion_point(destructor:pbfs.GetKvValueReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetKvValueReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete app_meta_;
}

void GetKvValueReq::ArenaDtor(void* object) {
  GetKvValueReq* _this = reinterpret_cast< GetKvValueReq* >(object);
  (void)_this;
}
void GetKvValueReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetKvValueReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetKvValueReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.GetKvValueReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && app_meta_ != nullptr) {
    delete app_meta_;
  }
  app_meta_ = nullptr;
  biz_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKvValueReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 biz_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          biz_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .pbfs.AppMeta app_meta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_meta(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.GetKvValueReq.key"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKvValueReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.GetKvValueReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_biz_id(), target);
  }

  // .pbfs.AppMeta app_meta = 2;
  if (this->_internal_has_app_meta()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::app_meta(this), target, stream);
  }

  // string key = 3;
  if (!this->_internal_key().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_key().data(), static_cast<int>(this->_internal_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.GetKvValueReq.key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_key(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.GetKvValueReq)
  return target;
}

size_t GetKvValueReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.GetKvValueReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string key = 3;
  if (!this->_internal_key().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_key());
  }

  // .pbfs.AppMeta app_meta = 2;
  if (this->_internal_has_app_meta()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_meta_);
  }

  // uint32 biz_id = 1;
  if (this->_internal_biz_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_biz_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKvValueReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetKvValueReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKvValueReq::GetClassData() const { return &_class_data_; }

void GetKvValueReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetKvValueReq *>(to)->MergeFrom(
      static_cast<const GetKvValueReq &>(from));
}


void GetKvValueReq::MergeFrom(const GetKvValueReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.GetKvValueReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _internal_set_key(from._internal_key());
  }
  if (from._internal_has_app_meta()) {
    _internal_mutable_app_meta()->::pbfs::AppMeta::MergeFrom(from._internal_app_meta());
  }
  if (from._internal_biz_id() != 0) {
    _internal_set_biz_id(from._internal_biz_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKvValueReq::CopyFrom(const GetKvValueReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.GetKvValueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKvValueReq::IsInitialized() const {
  return true;
}

void GetKvValueReq::InternalSwap(GetKvValueReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &key_, lhs_arena,
      &other->key_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetKvValueReq, biz_id_)
      + sizeof(GetKvValueReq::biz_id_)
      - PROTOBUF_FIELD_OFFSET(GetKvValueReq, app_meta_)>(
          reinterpret_cast<char*>(&app_meta_),
          reinterpret_cast<char*>(&other->app_meta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKvValueReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[22]);
}

// ===================================================================

class GetKvValueResp::_Internal {
 public:
};

GetKvValueResp::GetKvValueResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbfs.GetKvValueResp)
}
GetKvValueResp::GetKvValueResp(const GetKvValueResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  kv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    kv_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_kv_type().empty()) {
    kv_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_kv_type(), 
      GetArenaForAllocation());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbfs.GetKvValueResp)
}

inline void GetKvValueResp::SharedCtor() {
kv_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  kv_type_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetKvValueResp::~GetKvValueResp() {
  // @@protoc_insertion_point(destructor:pbfs.GetKvValueResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void GetKvValueResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  kv_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetKvValueResp::ArenaDtor(void* object) {
  GetKvValueResp* _this = reinterpret_cast< GetKvValueResp* >(object);
  (void)_this;
}
void GetKvValueResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetKvValueResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void GetKvValueResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbfs.GetKvValueResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kv_type_.ClearToEmpty();
  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetKvValueResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string kv_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_kv_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.GetKvValueResp.kv_type"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbfs.GetKvValueResp.value"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetKvValueResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbfs.GetKvValueResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string kv_type = 1;
  if (!this->_internal_kv_type().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_kv_type().data(), static_cast<int>(this->_internal_kv_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.GetKvValueResp.kv_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_kv_type(), target);
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbfs.GetKvValueResp.value");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbfs.GetKvValueResp)
  return target;
}

size_t GetKvValueResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbfs.GetKvValueResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string kv_type = 1;
  if (!this->_internal_kv_type().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_kv_type());
  }

  // string value = 2;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetKvValueResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    GetKvValueResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetKvValueResp::GetClassData() const { return &_class_data_; }

void GetKvValueResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<GetKvValueResp *>(to)->MergeFrom(
      static_cast<const GetKvValueResp &>(from));
}


void GetKvValueResp::MergeFrom(const GetKvValueResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbfs.GetKvValueResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_kv_type().empty()) {
    _internal_set_kv_type(from._internal_kv_type());
  }
  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetKvValueResp::CopyFrom(const GetKvValueResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbfs.GetKvValueResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetKvValueResp::IsInitialized() const {
  return true;
}

void GetKvValueResp::InternalSwap(GetKvValueResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &kv_type_, lhs_arena,
      &other->kv_type_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetKvValueResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_getter, &descriptor_table_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pbfs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pbfs::SidecarSpec* Arena::CreateMaybeMessage< ::pbfs::SidecarSpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::SidecarSpec >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::HandshakeMessage* Arena::CreateMaybeMessage< ::pbfs::HandshakeMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::HandshakeMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::HandshakeResp* Arena::CreateMaybeMessage< ::pbfs::HandshakeResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::HandshakeResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::MessagingMeta* Arena::CreateMaybeMessage< ::pbfs::MessagingMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::MessagingMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::MessagingResp* Arena::CreateMaybeMessage< ::pbfs::MessagingResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::MessagingResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::SideWatchMeta* Arena::CreateMaybeMessage< ::pbfs::SideWatchMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::SideWatchMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::FeedWatchMessage* Arena::CreateMaybeMessage< ::pbfs::FeedWatchMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::FeedWatchMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::AppMeta_LabelsEntry_DoNotUse* Arena::CreateMaybeMessage< ::pbfs::AppMeta_LabelsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::AppMeta_LabelsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::AppMeta* Arena::CreateMaybeMessage< ::pbfs::AppMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::AppMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::Repository* Arena::CreateMaybeMessage< ::pbfs::Repository >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::Repository >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::RepositorySpec* Arena::CreateMaybeMessage< ::pbfs::RepositorySpec >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::RepositorySpec >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::FileMeta* Arena::CreateMaybeMessage< ::pbfs::FileMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::FileMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::PullAppFileMetaReq* Arena::CreateMaybeMessage< ::pbfs::PullAppFileMetaReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::PullAppFileMetaReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::PullAppFileMetaResp* Arena::CreateMaybeMessage< ::pbfs::PullAppFileMetaResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::PullAppFileMetaResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::GetDownloadURLReq* Arena::CreateMaybeMessage< ::pbfs::GetDownloadURLReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::GetDownloadURLReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::GetDownloadURLResp* Arena::CreateMaybeMessage< ::pbfs::GetDownloadURLResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::GetDownloadURLResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::App* Arena::CreateMaybeMessage< ::pbfs::App >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::App >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::ListAppsReq* Arena::CreateMaybeMessage< ::pbfs::ListAppsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::ListAppsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::ListAppsResp* Arena::CreateMaybeMessage< ::pbfs::ListAppsResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::ListAppsResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::PullKvMetaReq* Arena::CreateMaybeMessage< ::pbfs::PullKvMetaReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::PullKvMetaReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::PullKvMetaResp* Arena::CreateMaybeMessage< ::pbfs::PullKvMetaResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::PullKvMetaResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::KvMeta* Arena::CreateMaybeMessage< ::pbfs::KvMeta >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::KvMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::GetKvValueReq* Arena::CreateMaybeMessage< ::pbfs::GetKvValueReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::GetKvValueReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbfs::GetKvValueResp* Arena::CreateMaybeMessage< ::pbfs::GetKvValueResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbfs::GetKvValueResp >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
