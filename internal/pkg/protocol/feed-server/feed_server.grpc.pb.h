// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: pkg/protocol/feed-server/feed_server.proto
#ifndef GRPC_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto__INCLUDED
#define GRPC_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto__INCLUDED

#include "pkg/protocol/feed-server/feed_server.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace pbfs {

class Upstream final {
 public:
  static constexpr char const* service_full_name() {
    return "pbfs.Upstream";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // APIs for sidecar.
    virtual ::grpc::Status Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::pbfs::HandshakeResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>> AsyncHandshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>>(AsyncHandshakeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>> PrepareAsyncHandshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>>(PrepareAsyncHandshakeRaw(context, request, cq));
    }
    virtual ::grpc::Status Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::pbfs::MessagingResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>> AsyncMessaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>>(AsyncMessagingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>> PrepareAsyncMessaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>>(PrepareAsyncMessagingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::pbfs::FeedWatchMessage>> Watch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::pbfs::FeedWatchMessage>>(WatchRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>> AsyncWatch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>>(AsyncWatchRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>> PrepareAsyncWatch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>>(PrepareAsyncWatchRaw(context, request, cq));
    }
    virtual ::grpc::Status PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::pbfs::PullAppFileMetaResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>> AsyncPullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>>(AsyncPullAppFileMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>> PrepareAsyncPullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>>(PrepareAsyncPullAppFileMetaRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::pbfs::GetDownloadURLResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>> AsyncGetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>>(AsyncGetDownloadURLRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>> PrepareAsyncGetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>>(PrepareAsyncGetDownloadURLRaw(context, request, cq));
    }
    virtual ::grpc::Status PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::pbfs::PullKvMetaResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>> AsyncPullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>>(AsyncPullKvMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>> PrepareAsyncPullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>>(PrepareAsyncPullKvMetaRaw(context, request, cq));
    }
    virtual ::grpc::Status GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::pbfs::GetKvValueResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>> AsyncGetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>>(AsyncGetKvValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>> PrepareAsyncGetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>>(PrepareAsyncGetKvValueRaw(context, request, cq));
    }
    virtual ::grpc::Status ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::pbfs::ListAppsResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>> AsyncListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>>(AsyncListAppsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>> PrepareAsyncListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>>(PrepareAsyncListAppsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // APIs for sidecar.
      virtual void Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Watch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta* request, ::grpc::ClientReadReactor< ::pbfs::FeedWatchMessage>* reactor) = 0;
      virtual void PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>* AsyncHandshakeRaw(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::HandshakeResp>* PrepareAsyncHandshakeRaw(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>* AsyncMessagingRaw(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::MessagingResp>* PrepareAsyncMessagingRaw(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::pbfs::FeedWatchMessage>* WatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>* AsyncWatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::pbfs::FeedWatchMessage>* PrepareAsyncWatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>* AsyncPullAppFileMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullAppFileMetaResp>* PrepareAsyncPullAppFileMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>* AsyncGetDownloadURLRaw(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetDownloadURLResp>* PrepareAsyncGetDownloadURLRaw(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>* AsyncPullKvMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::PullKvMetaResp>* PrepareAsyncPullKvMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>* AsyncGetKvValueRaw(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::GetKvValueResp>* PrepareAsyncGetKvValueRaw(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>* AsyncListAppsRaw(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::pbfs::ListAppsResp>* PrepareAsyncListAppsRaw(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::pbfs::HandshakeResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>> AsyncHandshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>>(AsyncHandshakeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>> PrepareAsyncHandshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>>(PrepareAsyncHandshakeRaw(context, request, cq));
    }
    ::grpc::Status Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::pbfs::MessagingResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>> AsyncMessaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>>(AsyncMessagingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>> PrepareAsyncMessaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>>(PrepareAsyncMessagingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::pbfs::FeedWatchMessage>> Watch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::pbfs::FeedWatchMessage>>(WatchRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>> AsyncWatch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>>(AsyncWatchRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>> PrepareAsyncWatch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>>(PrepareAsyncWatchRaw(context, request, cq));
    }
    ::grpc::Status PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::pbfs::PullAppFileMetaResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>> AsyncPullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>>(AsyncPullAppFileMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>> PrepareAsyncPullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>>(PrepareAsyncPullAppFileMetaRaw(context, request, cq));
    }
    ::grpc::Status GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::pbfs::GetDownloadURLResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>> AsyncGetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>>(AsyncGetDownloadURLRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>> PrepareAsyncGetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>>(PrepareAsyncGetDownloadURLRaw(context, request, cq));
    }
    ::grpc::Status PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::pbfs::PullKvMetaResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>> AsyncPullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>>(AsyncPullKvMetaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>> PrepareAsyncPullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>>(PrepareAsyncPullKvMetaRaw(context, request, cq));
    }
    ::grpc::Status GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::pbfs::GetKvValueResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>> AsyncGetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>>(AsyncGetKvValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>> PrepareAsyncGetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>>(PrepareAsyncGetKvValueRaw(context, request, cq));
    }
    ::grpc::Status ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::pbfs::ListAppsResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>> AsyncListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>>(AsyncListAppsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>> PrepareAsyncListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>>(PrepareAsyncListAppsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response, std::function<void(::grpc::Status)>) override;
      void Handshake(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response, std::function<void(::grpc::Status)>) override;
      void Messaging(::grpc::ClientContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Watch(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta* request, ::grpc::ClientReadReactor< ::pbfs::FeedWatchMessage>* reactor) override;
      void PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response, std::function<void(::grpc::Status)>) override;
      void PullAppFileMeta(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response, std::function<void(::grpc::Status)>) override;
      void GetDownloadURL(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response, std::function<void(::grpc::Status)>) override;
      void PullKvMeta(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response, std::function<void(::grpc::Status)>) override;
      void GetKvValue(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response, std::function<void(::grpc::Status)>) override;
      void ListApps(::grpc::ClientContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>* AsyncHandshakeRaw(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::HandshakeResp>* PrepareAsyncHandshakeRaw(::grpc::ClientContext* context, const ::pbfs::HandshakeMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>* AsyncMessagingRaw(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::MessagingResp>* PrepareAsyncMessagingRaw(::grpc::ClientContext* context, const ::pbfs::MessagingMeta& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::pbfs::FeedWatchMessage>* WatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request) override;
    ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>* AsyncWatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::pbfs::FeedWatchMessage>* PrepareAsyncWatchRaw(::grpc::ClientContext* context, const ::pbfs::SideWatchMeta& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>* AsyncPullAppFileMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::PullAppFileMetaResp>* PrepareAsyncPullAppFileMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullAppFileMetaReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>* AsyncGetDownloadURLRaw(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::GetDownloadURLResp>* PrepareAsyncGetDownloadURLRaw(::grpc::ClientContext* context, const ::pbfs::GetDownloadURLReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>* AsyncPullKvMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::PullKvMetaResp>* PrepareAsyncPullKvMetaRaw(::grpc::ClientContext* context, const ::pbfs::PullKvMetaReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>* AsyncGetKvValueRaw(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::GetKvValueResp>* PrepareAsyncGetKvValueRaw(::grpc::ClientContext* context, const ::pbfs::GetKvValueReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>* AsyncListAppsRaw(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::pbfs::ListAppsResp>* PrepareAsyncListAppsRaw(::grpc::ClientContext* context, const ::pbfs::ListAppsReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Handshake_;
    const ::grpc::internal::RpcMethod rpcmethod_Messaging_;
    const ::grpc::internal::RpcMethod rpcmethod_Watch_;
    const ::grpc::internal::RpcMethod rpcmethod_PullAppFileMeta_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDownloadURL_;
    const ::grpc::internal::RpcMethod rpcmethod_PullKvMeta_;
    const ::grpc::internal::RpcMethod rpcmethod_GetKvValue_;
    const ::grpc::internal::RpcMethod rpcmethod_ListApps_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // APIs for sidecar.
    virtual ::grpc::Status Handshake(::grpc::ServerContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response);
    virtual ::grpc::Status Messaging(::grpc::ServerContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response);
    virtual ::grpc::Status Watch(::grpc::ServerContext* context, const ::pbfs::SideWatchMeta* request, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* writer);
    virtual ::grpc::Status PullAppFileMeta(::grpc::ServerContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response);
    virtual ::grpc::Status GetDownloadURL(::grpc::ServerContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response);
    virtual ::grpc::Status PullKvMeta(::grpc::ServerContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response);
    virtual ::grpc::Status GetKvValue(::grpc::ServerContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response);
    virtual ::grpc::Status ListApps(::grpc::ServerContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Handshake() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHandshake(::grpc::ServerContext* context, ::pbfs::HandshakeMessage* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::HandshakeResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Messaging() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMessaging(::grpc::ServerContext* context, ::pbfs::MessagingMeta* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::MessagingResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Watch() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatch(::grpc::ServerContext* context, ::pbfs::SideWatchMeta* request, ::grpc::ServerAsyncWriter< ::pbfs::FeedWatchMessage>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPullAppFileMeta(::grpc::ServerContext* context, ::pbfs::PullAppFileMetaReq* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::PullAppFileMetaResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDownloadURL(::grpc::ServerContext* context, ::pbfs::GetDownloadURLReq* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::GetDownloadURLResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPullKvMeta(::grpc::ServerContext* context, ::pbfs::PullKvMetaReq* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::PullKvMetaResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetKvValue() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKvValue(::grpc::ServerContext* context, ::pbfs::GetKvValueReq* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::GetKvValueResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListApps() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApps(::grpc::ServerContext* context, ::pbfs::ListAppsReq* request, ::grpc::ServerAsyncResponseWriter< ::pbfs::ListAppsResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Handshake<WithAsyncMethod_Messaging<WithAsyncMethod_Watch<WithAsyncMethod_PullAppFileMeta<WithAsyncMethod_GetDownloadURL<WithAsyncMethod_PullKvMeta<WithAsyncMethod_GetKvValue<WithAsyncMethod_ListApps<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Handshake() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::HandshakeMessage, ::pbfs::HandshakeResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::HandshakeMessage* request, ::pbfs::HandshakeResp* response) { return this->Handshake(context, request, response); }));}
    void SetMessageAllocatorFor_Handshake(
        ::grpc::MessageAllocator< ::pbfs::HandshakeMessage, ::pbfs::HandshakeResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::HandshakeMessage, ::pbfs::HandshakeResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Handshake(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Messaging() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::MessagingMeta, ::pbfs::MessagingResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::MessagingMeta* request, ::pbfs::MessagingResp* response) { return this->Messaging(context, request, response); }));}
    void SetMessageAllocatorFor_Messaging(
        ::grpc::MessageAllocator< ::pbfs::MessagingMeta, ::pbfs::MessagingResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::MessagingMeta, ::pbfs::MessagingResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Messaging(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Watch() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::pbfs::SideWatchMeta, ::pbfs::FeedWatchMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::SideWatchMeta* request) { return this->Watch(context, request); }));
    }
    ~WithCallbackMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::pbfs::FeedWatchMessage>* Watch(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::PullAppFileMetaReq, ::pbfs::PullAppFileMetaResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::PullAppFileMetaReq* request, ::pbfs::PullAppFileMetaResp* response) { return this->PullAppFileMeta(context, request, response); }));}
    void SetMessageAllocatorFor_PullAppFileMeta(
        ::grpc::MessageAllocator< ::pbfs::PullAppFileMetaReq, ::pbfs::PullAppFileMetaResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::PullAppFileMetaReq, ::pbfs::PullAppFileMetaResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PullAppFileMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::GetDownloadURLReq, ::pbfs::GetDownloadURLResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::GetDownloadURLReq* request, ::pbfs::GetDownloadURLResp* response) { return this->GetDownloadURL(context, request, response); }));}
    void SetMessageAllocatorFor_GetDownloadURL(
        ::grpc::MessageAllocator< ::pbfs::GetDownloadURLReq, ::pbfs::GetDownloadURLResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::GetDownloadURLReq, ::pbfs::GetDownloadURLResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDownloadURL(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::PullKvMetaReq, ::pbfs::PullKvMetaResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::PullKvMetaReq* request, ::pbfs::PullKvMetaResp* response) { return this->PullKvMeta(context, request, response); }));}
    void SetMessageAllocatorFor_PullKvMeta(
        ::grpc::MessageAllocator< ::pbfs::PullKvMetaReq, ::pbfs::PullKvMetaResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::PullKvMetaReq, ::pbfs::PullKvMetaResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PullKvMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetKvValue() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::GetKvValueReq, ::pbfs::GetKvValueResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::GetKvValueReq* request, ::pbfs::GetKvValueResp* response) { return this->GetKvValue(context, request, response); }));}
    void SetMessageAllocatorFor_GetKvValue(
        ::grpc::MessageAllocator< ::pbfs::GetKvValueReq, ::pbfs::GetKvValueResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::GetKvValueReq, ::pbfs::GetKvValueResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetKvValue(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListApps() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::pbfs::ListAppsReq, ::pbfs::ListAppsResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::pbfs::ListAppsReq* request, ::pbfs::ListAppsResp* response) { return this->ListApps(context, request, response); }));}
    void SetMessageAllocatorFor_ListApps(
        ::grpc::MessageAllocator< ::pbfs::ListAppsReq, ::pbfs::ListAppsResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::pbfs::ListAppsReq, ::pbfs::ListAppsResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListApps(
      ::grpc::CallbackServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Handshake<WithCallbackMethod_Messaging<WithCallbackMethod_Watch<WithCallbackMethod_PullAppFileMeta<WithCallbackMethod_GetDownloadURL<WithCallbackMethod_PullKvMeta<WithCallbackMethod_GetKvValue<WithCallbackMethod_ListApps<Service > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Handshake() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Messaging() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Watch() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetKvValue() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListApps() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Handshake() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHandshake(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Messaging() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMessaging(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Watch() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWatch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(2, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPullAppFileMeta(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDownloadURL(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPullKvMeta(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetKvValue() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetKvValue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListApps() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListApps(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Handshake() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Handshake(context, request, response); }));
    }
    ~WithRawCallbackMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Handshake(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Messaging() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Messaging(context, request, response); }));
    }
    ~WithRawCallbackMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Messaging(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Watch() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->Watch(context, request); }));
    }
    ~WithRawCallbackMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* Watch(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PullAppFileMeta(context, request, response); }));
    }
    ~WithRawCallbackMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PullAppFileMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDownloadURL(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDownloadURL(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PullKvMeta(context, request, response); }));
    }
    ~WithRawCallbackMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PullKvMeta(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetKvValue() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetKvValue(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetKvValue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListApps() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListApps(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListApps(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Handshake : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Handshake() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::HandshakeMessage, ::pbfs::HandshakeResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::HandshakeMessage, ::pbfs::HandshakeResp>* streamer) {
                       return this->StreamedHandshake(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Handshake() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Handshake(::grpc::ServerContext* /*context*/, const ::pbfs::HandshakeMessage* /*request*/, ::pbfs::HandshakeResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHandshake(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::HandshakeMessage,::pbfs::HandshakeResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Messaging : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Messaging() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::MessagingMeta, ::pbfs::MessagingResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::MessagingMeta, ::pbfs::MessagingResp>* streamer) {
                       return this->StreamedMessaging(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Messaging() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Messaging(::grpc::ServerContext* /*context*/, const ::pbfs::MessagingMeta* /*request*/, ::pbfs::MessagingResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMessaging(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::MessagingMeta,::pbfs::MessagingResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PullAppFileMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PullAppFileMeta() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::PullAppFileMetaReq, ::pbfs::PullAppFileMetaResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::PullAppFileMetaReq, ::pbfs::PullAppFileMetaResp>* streamer) {
                       return this->StreamedPullAppFileMeta(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PullAppFileMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PullAppFileMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullAppFileMetaReq* /*request*/, ::pbfs::PullAppFileMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPullAppFileMeta(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::PullAppFileMetaReq,::pbfs::PullAppFileMetaResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDownloadURL : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDownloadURL() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::GetDownloadURLReq, ::pbfs::GetDownloadURLResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::GetDownloadURLReq, ::pbfs::GetDownloadURLResp>* streamer) {
                       return this->StreamedGetDownloadURL(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDownloadURL() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDownloadURL(::grpc::ServerContext* /*context*/, const ::pbfs::GetDownloadURLReq* /*request*/, ::pbfs::GetDownloadURLResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDownloadURL(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::GetDownloadURLReq,::pbfs::GetDownloadURLResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PullKvMeta : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PullKvMeta() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::PullKvMetaReq, ::pbfs::PullKvMetaResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::PullKvMetaReq, ::pbfs::PullKvMetaResp>* streamer) {
                       return this->StreamedPullKvMeta(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PullKvMeta() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PullKvMeta(::grpc::ServerContext* /*context*/, const ::pbfs::PullKvMetaReq* /*request*/, ::pbfs::PullKvMetaResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPullKvMeta(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::PullKvMetaReq,::pbfs::PullKvMetaResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetKvValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetKvValue() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::GetKvValueReq, ::pbfs::GetKvValueResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::GetKvValueReq, ::pbfs::GetKvValueResp>* streamer) {
                       return this->StreamedGetKvValue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetKvValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetKvValue(::grpc::ServerContext* /*context*/, const ::pbfs::GetKvValueReq* /*request*/, ::pbfs::GetKvValueResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetKvValue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::GetKvValueReq,::pbfs::GetKvValueResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListApps : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListApps() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::pbfs::ListAppsReq, ::pbfs::ListAppsResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::pbfs::ListAppsReq, ::pbfs::ListAppsResp>* streamer) {
                       return this->StreamedListApps(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListApps() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListApps(::grpc::ServerContext* /*context*/, const ::pbfs::ListAppsReq* /*request*/, ::pbfs::ListAppsResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListApps(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::pbfs::ListAppsReq,::pbfs::ListAppsResp>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Handshake<WithStreamedUnaryMethod_Messaging<WithStreamedUnaryMethod_PullAppFileMeta<WithStreamedUnaryMethod_GetDownloadURL<WithStreamedUnaryMethod_PullKvMeta<WithStreamedUnaryMethod_GetKvValue<WithStreamedUnaryMethod_ListApps<Service > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_Watch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_Watch() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::pbfs::SideWatchMeta, ::pbfs::FeedWatchMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::pbfs::SideWatchMeta, ::pbfs::FeedWatchMessage>* streamer) {
                       return this->StreamedWatch(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_Watch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Watch(::grpc::ServerContext* /*context*/, const ::pbfs::SideWatchMeta* /*request*/, ::grpc::ServerWriter< ::pbfs::FeedWatchMessage>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedWatch(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::pbfs::SideWatchMeta,::pbfs::FeedWatchMessage>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_Watch<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_Handshake<WithStreamedUnaryMethod_Messaging<WithSplitStreamingMethod_Watch<WithStreamedUnaryMethod_PullAppFileMeta<WithStreamedUnaryMethod_GetDownloadURL<WithStreamedUnaryMethod_PullKvMeta<WithStreamedUnaryMethod_GetKvValue<WithStreamedUnaryMethod_ListApps<Service > > > > > > > > StreamedService;
};

}  // namespace pbfs


#endif  // GRPC_pkg_2fprotocol_2ffeed_2dserver_2ffeed_5fserver_2eproto__INCLUDED
