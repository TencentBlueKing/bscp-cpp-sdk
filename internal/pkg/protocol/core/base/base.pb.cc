// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pkg/protocol/core/base/base.proto

#include "pkg/protocol/core/base/base.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace pbbase {
constexpr Revision::Revision(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : creator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , reviser_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , create_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , update_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct RevisionDefaultTypeInternal {
  constexpr RevisionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RevisionDefaultTypeInternal() {}
  union {
    Revision _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RevisionDefaultTypeInternal _Revision_default_instance_;
constexpr CreatedRevision::CreatedRevision(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : creator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , create_at_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CreatedRevisionDefaultTypeInternal {
  constexpr CreatedRevisionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CreatedRevisionDefaultTypeInternal() {}
  union {
    CreatedRevision _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CreatedRevisionDefaultTypeInternal _CreatedRevision_default_instance_;
constexpr BasePage::BasePage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : sort_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , order_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , count_(false)
  , start_(0u)
  , limit_(0u){}
struct BasePageDefaultTypeInternal {
  constexpr BasePageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BasePageDefaultTypeInternal() {}
  union {
    BasePage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BasePageDefaultTypeInternal _BasePage_default_instance_;
constexpr EmptyReq::EmptyReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct EmptyReqDefaultTypeInternal {
  constexpr EmptyReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmptyReqDefaultTypeInternal() {}
  union {
    EmptyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EmptyReqDefaultTypeInternal _EmptyReq_default_instance_;
constexpr EmptyResp::EmptyResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct EmptyRespDefaultTypeInternal {
  constexpr EmptyRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~EmptyRespDefaultTypeInternal() {}
  union {
    EmptyResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT EmptyRespDefaultTypeInternal _EmptyResp_default_instance_;
constexpr BaseResp::BaseResp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , code_(0){}
struct BaseRespDefaultTypeInternal {
  constexpr BaseRespDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BaseRespDefaultTypeInternal() {}
  union {
    BaseResp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BaseRespDefaultTypeInternal _BaseResp_default_instance_;
constexpr Versioning::Versioning(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : major_(0u)
  , minor_(0u)
  , patch_(0u){}
struct VersioningDefaultTypeInternal {
  constexpr VersioningDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~VersioningDefaultTypeInternal() {}
  union {
    Versioning _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT VersioningDefaultTypeInternal _Versioning_default_instance_;
constexpr InvalidArgument::InvalidArgument(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : field_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct InvalidArgumentDefaultTypeInternal {
  constexpr InvalidArgumentDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvalidArgumentDefaultTypeInternal() {}
  union {
    InvalidArgument _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvalidArgumentDefaultTypeInternal _InvalidArgument_default_instance_;
}  // namespace pbbase
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto = nullptr;

const uint32_t TableStruct_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::Revision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::Revision, creator_),
  PROTOBUF_FIELD_OFFSET(::pbbase::Revision, reviser_),
  PROTOBUF_FIELD_OFFSET(::pbbase::Revision, create_at_),
  PROTOBUF_FIELD_OFFSET(::pbbase::Revision, update_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::CreatedRevision, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::CreatedRevision, creator_),
  PROTOBUF_FIELD_OFFSET(::pbbase::CreatedRevision, create_at_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, count_),
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, start_),
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, limit_),
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, sort_),
  PROTOBUF_FIELD_OFFSET(::pbbase::BasePage, order_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::EmptyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::EmptyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::BaseResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::BaseResp, code_),
  PROTOBUF_FIELD_OFFSET(::pbbase::BaseResp, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::Versioning, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::Versioning, major_),
  PROTOBUF_FIELD_OFFSET(::pbbase::Versioning, minor_),
  PROTOBUF_FIELD_OFFSET(::pbbase::Versioning, patch_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pbbase::InvalidArgument, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::pbbase::InvalidArgument, field_),
  PROTOBUF_FIELD_OFFSET(::pbbase::InvalidArgument, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::pbbase::Revision)},
  { 10, -1, -1, sizeof(::pbbase::CreatedRevision)},
  { 18, -1, -1, sizeof(::pbbase::BasePage)},
  { 29, -1, -1, sizeof(::pbbase::EmptyReq)},
  { 35, -1, -1, sizeof(::pbbase::EmptyResp)},
  { 41, -1, -1, sizeof(::pbbase::BaseResp)},
  { 49, -1, -1, sizeof(::pbbase::Versioning)},
  { 58, -1, -1, sizeof(::pbbase::InvalidArgument)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_Revision_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_CreatedRevision_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_BasePage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_EmptyReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_EmptyResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_BaseResp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_Versioning_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pbbase::_InvalidArgument_default_instance_),
};

const char descriptor_table_protodef_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!pkg/protocol/core/base/base.proto\022\006pbb"
  "ase\"R\n\010Revision\022\017\n\007creator\030\001 \001(\t\022\017\n\007revi"
  "ser\030\002 \001(\t\022\021\n\tcreate_at\030\003 \001(\t\022\021\n\tupdate_a"
  "t\030\004 \001(\t\"5\n\017CreatedRevision\022\017\n\007creator\030\001 "
  "\001(\t\022\021\n\tcreate_at\030\002 \001(\t\"T\n\010BasePage\022\r\n\005co"
  "unt\030\001 \001(\010\022\r\n\005start\030\002 \001(\r\022\r\n\005limit\030\003 \001(\r\022"
  "\014\n\004sort\030\004 \001(\t\022\r\n\005order\030\005 \001(\t\"\n\n\010EmptyReq"
  "\"\013\n\tEmptyResp\")\n\010BaseResp\022\014\n\004code\030\001 \001(\005\022"
  "\017\n\007message\030\002 \001(\t\"9\n\nVersioning\022\r\n\005Major\030"
  "\001 \001(\r\022\r\n\005Minor\030\002 \001(\r\022\r\n\005Patch\030\003 \001(\r\"1\n\017I"
  "nvalidArgument\022\r\n\005field\030\001 \001(\t\022\017\n\007message"
  "\030\002 \001(\tBWZUgithub.com/TencentBlueKing/bk-"
  "bcs/bcs-services/bcs-bscp/pkg/protocol/c"
  "ore/base;pbbaseb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto = {
  false, false, 543, descriptor_table_protodef_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto, "pkg/protocol/core/base/base.proto", 
  &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once, nullptr, 0, 8,
  schemas, file_default_instances, TableStruct_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto::offsets,
  file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto, file_level_enum_descriptors_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto, file_level_service_descriptors_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter() {
  return &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto(&descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto);
namespace pbbase {

// ===================================================================

class Revision::_Internal {
 public:
};

Revision::Revision(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.Revision)
}
Revision::Revision(const Revision& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    creator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_creator(), 
      GetArenaForAllocation());
  }
  reviser_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    reviser_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_reviser().empty()) {
    reviser_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_reviser(), 
      GetArenaForAllocation());
  }
  create_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    create_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_create_at().empty()) {
    create_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_create_at(), 
      GetArenaForAllocation());
  }
  update_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    update_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_update_at().empty()) {
    update_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_update_at(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbbase.Revision)
}

inline void Revision::SharedCtor() {
creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
reviser_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  reviser_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
create_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  create_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
update_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  update_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Revision::~Revision() {
  // @@protoc_insertion_point(destructor:pbbase.Revision)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Revision::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  creator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  reviser_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  create_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  update_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Revision::ArenaDtor(void* object) {
  Revision* _this = reinterpret_cast< Revision* >(object);
  (void)_this;
}
void Revision::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Revision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Revision::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.Revision)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  creator_.ClearToEmpty();
  reviser_.ClearToEmpty();
  create_at_.ClearToEmpty();
  update_at_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Revision::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string creator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_creator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.Revision.creator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string reviser = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_reviser();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.Revision.reviser"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string create_at = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_create_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.Revision.create_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string update_at = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_update_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.Revision.update_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Revision::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.Revision)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.Revision.creator");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_creator(), target);
  }

  // string reviser = 2;
  if (!this->_internal_reviser().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_reviser().data(), static_cast<int>(this->_internal_reviser().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.Revision.reviser");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_reviser(), target);
  }

  // string create_at = 3;
  if (!this->_internal_create_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_create_at().data(), static_cast<int>(this->_internal_create_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.Revision.create_at");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_create_at(), target);
  }

  // string update_at = 4;
  if (!this->_internal_update_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_update_at().data(), static_cast<int>(this->_internal_update_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.Revision.update_at");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_update_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.Revision)
  return target;
}

size_t Revision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.Revision)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string reviser = 2;
  if (!this->_internal_reviser().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_reviser());
  }

  // string create_at = 3;
  if (!this->_internal_create_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_create_at());
  }

  // string update_at = 4;
  if (!this->_internal_update_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_update_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Revision::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Revision::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Revision::GetClassData() const { return &_class_data_; }

void Revision::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Revision *>(to)->MergeFrom(
      static_cast<const Revision &>(from));
}


void Revision::MergeFrom(const Revision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.Revision)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _internal_set_creator(from._internal_creator());
  }
  if (!from._internal_reviser().empty()) {
    _internal_set_reviser(from._internal_reviser());
  }
  if (!from._internal_create_at().empty()) {
    _internal_set_create_at(from._internal_create_at());
  }
  if (!from._internal_update_at().empty()) {
    _internal_set_update_at(from._internal_update_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Revision::CopyFrom(const Revision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.Revision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Revision::IsInitialized() const {
  return true;
}

void Revision::InternalSwap(Revision* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &creator_, lhs_arena,
      &other->creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &reviser_, lhs_arena,
      &other->reviser_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &create_at_, lhs_arena,
      &other->create_at_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &update_at_, lhs_arena,
      &other->update_at_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Revision::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[0]);
}

// ===================================================================

class CreatedRevision::_Internal {
 public:
};

CreatedRevision::CreatedRevision(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.CreatedRevision)
}
CreatedRevision::CreatedRevision(const CreatedRevision& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    creator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_creator(), 
      GetArenaForAllocation());
  }
  create_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    create_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_create_at().empty()) {
    create_at_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_create_at(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbbase.CreatedRevision)
}

inline void CreatedRevision::SharedCtor() {
creator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  creator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
create_at_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  create_at_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreatedRevision::~CreatedRevision() {
  // @@protoc_insertion_point(destructor:pbbase.CreatedRevision)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CreatedRevision::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  creator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  create_at_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreatedRevision::ArenaDtor(void* object) {
  CreatedRevision* _this = reinterpret_cast< CreatedRevision* >(object);
  (void)_this;
}
void CreatedRevision::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreatedRevision::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CreatedRevision::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.CreatedRevision)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  creator_.ClearToEmpty();
  create_at_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatedRevision::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string creator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_creator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.CreatedRevision.creator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string create_at = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_create_at();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.CreatedRevision.create_at"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatedRevision::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.CreatedRevision)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.CreatedRevision.creator");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_creator(), target);
  }

  // string create_at = 2;
  if (!this->_internal_create_at().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_create_at().data(), static_cast<int>(this->_internal_create_at().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.CreatedRevision.create_at");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_create_at(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.CreatedRevision)
  return target;
}

size_t CreatedRevision::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.CreatedRevision)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string creator = 1;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string create_at = 2;
  if (!this->_internal_create_at().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_create_at());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatedRevision::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CreatedRevision::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatedRevision::GetClassData() const { return &_class_data_; }

void CreatedRevision::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CreatedRevision *>(to)->MergeFrom(
      static_cast<const CreatedRevision &>(from));
}


void CreatedRevision::MergeFrom(const CreatedRevision& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.CreatedRevision)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _internal_set_creator(from._internal_creator());
  }
  if (!from._internal_create_at().empty()) {
    _internal_set_create_at(from._internal_create_at());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatedRevision::CopyFrom(const CreatedRevision& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.CreatedRevision)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatedRevision::IsInitialized() const {
  return true;
}

void CreatedRevision::InternalSwap(CreatedRevision* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &creator_, lhs_arena,
      &other->creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &create_at_, lhs_arena,
      &other->create_at_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatedRevision::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[1]);
}

// ===================================================================

class BasePage::_Internal {
 public:
};

BasePage::BasePage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.BasePage)
}
BasePage::BasePage(const BasePage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sort_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sort_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sort().empty()) {
    sort_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sort(), 
      GetArenaForAllocation());
  }
  order_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    order_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_order().empty()) {
    order_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_order(), 
      GetArenaForAllocation());
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&count_)) + sizeof(limit_));
  // @@protoc_insertion_point(copy_constructor:pbbase.BasePage)
}

inline void BasePage::SharedCtor() {
sort_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sort_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
order_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  order_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&count_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&count_)) + sizeof(limit_));
}

BasePage::~BasePage() {
  // @@protoc_insertion_point(destructor:pbbase.BasePage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BasePage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sort_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  order_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BasePage::ArenaDtor(void* object) {
  BasePage* _this = reinterpret_cast< BasePage* >(object);
  (void)_this;
}
void BasePage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BasePage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BasePage::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.BasePage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sort_.ClearToEmpty();
  order_.ClearToEmpty();
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&limit_) -
      reinterpret_cast<char*>(&count_)) + sizeof(limit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BasePage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool count = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 limit = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          limit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string sort = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_sort();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.BasePage.sort"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string order = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_order();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.BasePage.order"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BasePage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.BasePage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool count = 1;
  if (this->_internal_count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_count(), target);
  }

  // uint32 start = 2;
  if (this->_internal_start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start(), target);
  }

  // uint32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_limit(), target);
  }

  // string sort = 4;
  if (!this->_internal_sort().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sort().data(), static_cast<int>(this->_internal_sort().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.BasePage.sort");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sort(), target);
  }

  // string order = 5;
  if (!this->_internal_order().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_order().data(), static_cast<int>(this->_internal_order().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.BasePage.order");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_order(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.BasePage)
  return target;
}

size_t BasePage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.BasePage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sort = 4;
  if (!this->_internal_sort().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sort());
  }

  // string order = 5;
  if (!this->_internal_order().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_order());
  }

  // bool count = 1;
  if (this->_internal_count() != 0) {
    total_size += 1 + 1;
  }

  // uint32 start = 2;
  if (this->_internal_start() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_start());
  }

  // uint32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_limit());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BasePage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BasePage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BasePage::GetClassData() const { return &_class_data_; }

void BasePage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BasePage *>(to)->MergeFrom(
      static_cast<const BasePage &>(from));
}


void BasePage::MergeFrom(const BasePage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.BasePage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sort().empty()) {
    _internal_set_sort(from._internal_sort());
  }
  if (!from._internal_order().empty()) {
    _internal_set_order(from._internal_order());
  }
  if (from._internal_count() != 0) {
    _internal_set_count(from._internal_count());
  }
  if (from._internal_start() != 0) {
    _internal_set_start(from._internal_start());
  }
  if (from._internal_limit() != 0) {
    _internal_set_limit(from._internal_limit());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BasePage::CopyFrom(const BasePage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.BasePage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BasePage::IsInitialized() const {
  return true;
}

void BasePage::InternalSwap(BasePage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sort_, lhs_arena,
      &other->sort_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &order_, lhs_arena,
      &other->order_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BasePage, limit_)
      + sizeof(BasePage::limit_)
      - PROTOBUF_FIELD_OFFSET(BasePage, count_)>(
          reinterpret_cast<char*>(&count_),
          reinterpret_cast<char*>(&other->count_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BasePage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[2]);
}

// ===================================================================

class EmptyReq::_Internal {
 public:
};

EmptyReq::EmptyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:pbbase.EmptyReq)
}
EmptyReq::EmptyReq(const EmptyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbbase.EmptyReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EmptyReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[3]);
}

// ===================================================================

class EmptyResp::_Internal {
 public:
};

EmptyResp::EmptyResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:pbbase.EmptyResp)
}
EmptyResp::EmptyResp(const EmptyResp& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pbbase.EmptyResp)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EmptyResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EmptyResp::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata EmptyResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[4]);
}

// ===================================================================

class BaseResp::_Internal {
 public:
};

BaseResp::BaseResp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.BaseResp)
}
BaseResp::BaseResp(const BaseResp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:pbbase.BaseResp)
}

inline void BaseResp::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
code_ = 0;
}

BaseResp::~BaseResp() {
  // @@protoc_insertion_point(destructor:pbbase.BaseResp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BaseResp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BaseResp::ArenaDtor(void* object) {
  BaseResp* _this = reinterpret_cast< BaseResp* >(object);
  (void)_this;
}
void BaseResp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BaseResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BaseResp::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.BaseResp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BaseResp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.BaseResp.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BaseResp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.BaseResp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.BaseResp.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.BaseResp)
  return target;
}

size_t BaseResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.BaseResp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BaseResp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BaseResp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BaseResp::GetClassData() const { return &_class_data_; }

void BaseResp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BaseResp *>(to)->MergeFrom(
      static_cast<const BaseResp &>(from));
}


void BaseResp::MergeFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.BaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BaseResp::CopyFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.BaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseResp::IsInitialized() const {
  return true;
}

void BaseResp::InternalSwap(BaseResp* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BaseResp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[5]);
}

// ===================================================================

class Versioning::_Internal {
 public:
};

Versioning::Versioning(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.Versioning)
}
Versioning::Versioning(const Versioning& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:pbbase.Versioning)
}

inline void Versioning::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&major_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
}

Versioning::~Versioning() {
  // @@protoc_insertion_point(destructor:pbbase.Versioning)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Versioning::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Versioning::ArenaDtor(void* object) {
  Versioning* _this = reinterpret_cast< Versioning* >(object);
  (void)_this;
}
void Versioning::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Versioning::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Versioning::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.Versioning)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Versioning::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Major = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          major_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Minor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          minor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Patch = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          patch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Versioning::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.Versioning)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Major = 1;
  if (this->_internal_major() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_major(), target);
  }

  // uint32 Minor = 2;
  if (this->_internal_minor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_minor(), target);
  }

  // uint32 Patch = 3;
  if (this->_internal_patch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_patch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.Versioning)
  return target;
}

size_t Versioning::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.Versioning)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Major = 1;
  if (this->_internal_major() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_major());
  }

  // uint32 Minor = 2;
  if (this->_internal_minor() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_minor());
  }

  // uint32 Patch = 3;
  if (this->_internal_patch() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_patch());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Versioning::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Versioning::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Versioning::GetClassData() const { return &_class_data_; }

void Versioning::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Versioning *>(to)->MergeFrom(
      static_cast<const Versioning &>(from));
}


void Versioning::MergeFrom(const Versioning& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.Versioning)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_major() != 0) {
    _internal_set_major(from._internal_major());
  }
  if (from._internal_minor() != 0) {
    _internal_set_minor(from._internal_minor());
  }
  if (from._internal_patch() != 0) {
    _internal_set_patch(from._internal_patch());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Versioning::CopyFrom(const Versioning& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.Versioning)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Versioning::IsInitialized() const {
  return true;
}

void Versioning::InternalSwap(Versioning* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Versioning, patch_)
      + sizeof(Versioning::patch_)
      - PROTOBUF_FIELD_OFFSET(Versioning, major_)>(
          reinterpret_cast<char*>(&major_),
          reinterpret_cast<char*>(&other->major_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Versioning::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[6]);
}

// ===================================================================

class InvalidArgument::_Internal {
 public:
};

InvalidArgument::InvalidArgument(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:pbbase.InvalidArgument)
}
InvalidArgument::InvalidArgument(const InvalidArgument& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_field().empty()) {
    field_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_field(), 
      GetArenaForAllocation());
  }
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:pbbase.InvalidArgument)
}

inline void InvalidArgument::SharedCtor() {
field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InvalidArgument::~InvalidArgument() {
  // @@protoc_insertion_point(destructor:pbbase.InvalidArgument)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvalidArgument::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InvalidArgument::ArenaDtor(void* object) {
  InvalidArgument* _this = reinterpret_cast< InvalidArgument* >(object);
  (void)_this;
}
void InvalidArgument::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvalidArgument::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvalidArgument::Clear() {
// @@protoc_insertion_point(message_clear_start:pbbase.InvalidArgument)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.ClearToEmpty();
  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvalidArgument::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.InvalidArgument.field"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "pbbase.InvalidArgument.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvalidArgument::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pbbase.InvalidArgument)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.InvalidArgument.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "pbbase.InvalidArgument.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pbbase.InvalidArgument)
  return target;
}

size_t InvalidArgument::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pbbase.InvalidArgument)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string field = 1;
  if (!this->_internal_field().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvalidArgument::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvalidArgument::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvalidArgument::GetClassData() const { return &_class_data_; }

void InvalidArgument::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvalidArgument *>(to)->MergeFrom(
      static_cast<const InvalidArgument &>(from));
}


void InvalidArgument::MergeFrom(const InvalidArgument& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pbbase.InvalidArgument)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_field().empty()) {
    _internal_set_field(from._internal_field());
  }
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvalidArgument::CopyFrom(const InvalidArgument& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pbbase.InvalidArgument)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvalidArgument::IsInitialized() const {
  return true;
}

void InvalidArgument::InternalSwap(InvalidArgument* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &field_, lhs_arena,
      &other->field_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InvalidArgument::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_getter, &descriptor_table_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto_once,
      file_level_metadata_pkg_2fprotocol_2fcore_2fbase_2fbase_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace pbbase
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pbbase::Revision* Arena::CreateMaybeMessage< ::pbbase::Revision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::Revision >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::CreatedRevision* Arena::CreateMaybeMessage< ::pbbase::CreatedRevision >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::CreatedRevision >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::BasePage* Arena::CreateMaybeMessage< ::pbbase::BasePage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::BasePage >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::EmptyReq* Arena::CreateMaybeMessage< ::pbbase::EmptyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::EmptyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::EmptyResp* Arena::CreateMaybeMessage< ::pbbase::EmptyResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::EmptyResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::BaseResp* Arena::CreateMaybeMessage< ::pbbase::BaseResp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::BaseResp >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::Versioning* Arena::CreateMaybeMessage< ::pbbase::Versioning >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::Versioning >(arena);
}
template<> PROTOBUF_NOINLINE ::pbbase::InvalidArgument* Arena::CreateMaybeMessage< ::pbbase::InvalidArgument >(Arena* arena) {
  return Arena::CreateMessageInternal< ::pbbase::InvalidArgument >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
